

Microchip MPLAB XC8 Assembler V3.00 build 20241204225717 
                                                                                               Sun Jun 08 16:13:45 2025

Microchip MPLAB XC8 C Compiler v3.00 (Free license) build 20241204225717 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,space=0,delta=1,noexec
     6                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,space=0,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,space=0,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,space=0,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,space=0,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,space=0,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,space=0,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,space=0,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,space=0,delta=1
    17                           	psect	text7,global,reloc=2,class=CODE,space=0,delta=1
    18                           	psect	text8,global,reloc=2,class=CODE,space=0,delta=1
    19                           	psect	text9,global,reloc=2,class=CODE,space=0,delta=1
    20                           	psect	text10,global,reloc=2,class=CODE,space=0,delta=1
    21                           	psect	text11,global,reloc=2,class=CODE,space=0,delta=1
    22                           	psect	text12,global,reloc=2,class=CODE,space=0,delta=1
    23                           	psect	text13,global,reloc=2,class=CODE,space=0,delta=1,group=2
    24                           	psect	text14,global,reloc=2,class=CODE,space=0,delta=1,group=1
    25                           	psect	text15,global,reloc=2,class=CODE,space=0,delta=1
    26                           	psect	text16,global,reloc=2,class=CODE,space=0,delta=1,group=1
    27                           	psect	text17,global,reloc=2,class=CODE,space=0,delta=1
    28                           	psect	text18,global,reloc=2,class=CODE,space=0,delta=1
    29                           	psect	text19,global,reloc=2,class=CODE,space=0,delta=1
    30                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    31                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    32                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    33   000000                     
    34                           ; Generated 17/01/2025 GMT
    35                           ; 
    36                           ; Copyright Â© 2025, Microchip Technology Inc. and its subsidiaries ("Microchip")
    37                           ; All rights reserved.
    38                           ; 
    39                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    40                           ; 
    41                           ; Redistribution and use in source and binary forms, with or without modification, are
    42                           ; permitted provided that the following conditions are met:
    43                           ; 
    44                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    45                           ;        conditions and the following disclaimer.
    46                           ; 
    47                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    48                           ;        of conditions and the following disclaimer in the documentation and/or other
    49                           ;        materials provided with the distribution. Publication is not required when
    50                           ;        this file is used in an embedded application.
    51                           ; 
    52                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    53                           ;        software without specific prior written permission.
    54                           ; 
    55                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    56                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    57                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    58                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    59                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    60                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    61                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    62                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    63                           ; 
    64                           ; 
    65                           ; Code-generator required, PIC18F4520 Definitions
    66                           ; 
    67                           ; SFR Addresses
    68   000FE0                     bsr             equ	4064
    69   000FE9                     fsr0            equ	4073
    70   000FEA                     fsr0h           equ	4074
    71   000FE9                     fsr0l           equ	4073
    72   000FE1                     fsr1            equ	4065
    73   000FE2                     fsr1h           equ	4066
    74   000FE1                     fsr1l           equ	4065
    75   000FD9                     fsr2            equ	4057
    76   000FDA                     fsr2h           equ	4058
    77   000FD9                     fsr2l           equ	4057
    78   000FEF                     indf0           equ	4079
    79   000FE7                     indf1           equ	4071
    80   000FDF                     indf2           equ	4063
    81   000FF2                     intcon          equ	4082
    82   000000                     nvmcon          equ	0
    83   000FF9                     pcl             equ	4089
    84   000FFA                     pclath          equ	4090
    85   000FFB                     pclatu          equ	4091
    86   000FEB                     plusw0          equ	4075
    87   000FE3                     plusw1          equ	4067
    88   000FDB                     plusw2          equ	4059
    89   000FED                     postdec0        equ	4077
    90   000FE5                     postdec1        equ	4069
    91   000FDD                     postdec2        equ	4061
    92   000FEE                     postinc0        equ	4078
    93   000FE6                     postinc1        equ	4070
    94   000FDE                     postinc2        equ	4062
    95   000FEC                     preinc0         equ	4076
    96   000FE4                     preinc1         equ	4068
    97   000FDC                     preinc2         equ	4060
    98   000FF3                     prod            equ	4083
    99   000FF4                     prodh           equ	4084
   100   000FF3                     prodl           equ	4083
   101   000FD8                     status          equ	4056
   102   000FF5                     tablat          equ	4085
   103   000FF6                     tblptr          equ	4086
   104   000FF7                     tblptrh         equ	4087
   105   000FF6                     tblptrl         equ	4086
   106   000FF8                     tblptru         equ	4088
   107   000FFD                     tosl            equ	4093
   108   000FE8                     wreg            equ	4072
   109   000F80                     PORTA           equ	3968	;# 
   110   000F81                     PORTB           equ	3969	;# 
   111   000F82                     PORTC           equ	3970	;# 
   112   000F83                     PORTD           equ	3971	;# 
   113   000F84                     PORTE           equ	3972	;# 
   114   000F89                     LATA            equ	3977	;# 
   115   000F8A                     LATB            equ	3978	;# 
   116   000F8B                     LATC            equ	3979	;# 
   117   000F8C                     LATD            equ	3980	;# 
   118   000F8D                     LATE            equ	3981	;# 
   119   000F92                     TRISA           equ	3986	;# 
   120   000F92                     DDRA            equ	3986	;# 
   121   000F93                     TRISB           equ	3987	;# 
   122   000F93                     DDRB            equ	3987	;# 
   123   000F94                     TRISC           equ	3988	;# 
   124   000F94                     DDRC            equ	3988	;# 
   125   000F95                     TRISD           equ	3989	;# 
   126   000F95                     DDRD            equ	3989	;# 
   127   000F96                     TRISE           equ	3990	;# 
   128   000F96                     DDRE            equ	3990	;# 
   129   000F9B                     OSCTUNE         equ	3995	;# 
   130   000F9D                     PIE1            equ	3997	;# 
   131   000F9E                     PIR1            equ	3998	;# 
   132   000F9F                     IPR1            equ	3999	;# 
   133   000FA0                     PIE2            equ	4000	;# 
   134   000FA1                     PIR2            equ	4001	;# 
   135   000FA2                     IPR2            equ	4002	;# 
   136   000FA6                     EECON1          equ	4006	;# 
   137   000FA7                     EECON2          equ	4007	;# 
   138   000FA8                     EEDATA          equ	4008	;# 
   139   000FA9                     EEADR           equ	4009	;# 
   140   000FAB                     RCSTA           equ	4011	;# 
   141   000FAB                     RCSTA1          equ	4011	;# 
   142   000FAC                     TXSTA           equ	4012	;# 
   143   000FAC                     TXSTA1          equ	4012	;# 
   144   000FAD                     TXREG           equ	4013	;# 
   145   000FAD                     TXREG1          equ	4013	;# 
   146   000FAE                     RCREG           equ	4014	;# 
   147   000FAE                     RCREG1          equ	4014	;# 
   148   000FAF                     SPBRG           equ	4015	;# 
   149   000FAF                     SPBRG1          equ	4015	;# 
   150   000FB0                     SPBRGH          equ	4016	;# 
   151   000FB1                     T3CON           equ	4017	;# 
   152   000FB2                     TMR3            equ	4018	;# 
   153   000FB2                     TMR3L           equ	4018	;# 
   154   000FB3                     TMR3H           equ	4019	;# 
   155   000FB4                     CMCON           equ	4020	;# 
   156   000FB5                     CVRCON          equ	4021	;# 
   157   000FB6                     ECCP1AS         equ	4022	;# 
   158   000FB6                     ECCPAS          equ	4022	;# 
   159   000FB7                     PWM1CON         equ	4023	;# 
   160   000FB7                     ECCP1DEL        equ	4023	;# 
   161   000FB8                     BAUDCON         equ	4024	;# 
   162   000FB8                     BAUDCTL         equ	4024	;# 
   163   000FBA                     CCP2CON         equ	4026	;# 
   164   000FBB                     CCPR2           equ	4027	;# 
   165   000FBB                     CCPR2L          equ	4027	;# 
   166   000FBC                     CCPR2H          equ	4028	;# 
   167   000FBD                     CCP1CON         equ	4029	;# 
   168   000FBE                     CCPR1           equ	4030	;# 
   169   000FBE                     CCPR1L          equ	4030	;# 
   170   000FBF                     CCPR1H          equ	4031	;# 
   171   000FC0                     ADCON2          equ	4032	;# 
   172   000FC1                     ADCON1          equ	4033	;# 
   173   000FC2                     ADCON0          equ	4034	;# 
   174   000FC3                     ADRES           equ	4035	;# 
   175   000FC3                     ADRESL          equ	4035	;# 
   176   000FC4                     ADRESH          equ	4036	;# 
   177   000FC5                     SSPCON2         equ	4037	;# 
   178   000FC6                     SSPCON1         equ	4038	;# 
   179   000FC7                     SSPSTAT         equ	4039	;# 
   180   000FC8                     SSPADD          equ	4040	;# 
   181   000FC9                     SSPBUF          equ	4041	;# 
   182   000FCA                     T2CON           equ	4042	;# 
   183   000FCB                     PR2             equ	4043	;# 
   184   000FCB                     MEMCON          equ	4043	;# 
   185   000FCC                     TMR2            equ	4044	;# 
   186   000FCD                     T1CON           equ	4045	;# 
   187   000FCE                     TMR1            equ	4046	;# 
   188   000FCE                     TMR1L           equ	4046	;# 
   189   000FCF                     TMR1H           equ	4047	;# 
   190   000FD0                     RCON            equ	4048	;# 
   191   000FD1                     WDTCON          equ	4049	;# 
   192   000FD2                     HLVDCON         equ	4050	;# 
   193   000FD2                     LVDCON          equ	4050	;# 
   194   000FD3                     OSCCON          equ	4051	;# 
   195   000FD5                     T0CON           equ	4053	;# 
   196   000FD6                     TMR0            equ	4054	;# 
   197   000FD6                     TMR0L           equ	4054	;# 
   198   000FD7                     TMR0H           equ	4055	;# 
   199   000FD8                     STATUS          equ	4056	;# 
   200   000FD9                     FSR2            equ	4057	;# 
   201   000FD9                     FSR2L           equ	4057	;# 
   202   000FDA                     FSR2H           equ	4058	;# 
   203   000FDB                     PLUSW2          equ	4059	;# 
   204   000FDC                     PREINC2         equ	4060	;# 
   205   000FDD                     POSTDEC2        equ	4061	;# 
   206   000FDE                     POSTINC2        equ	4062	;# 
   207   000FDF                     INDF2           equ	4063	;# 
   208   000FE0                     BSR             equ	4064	;# 
   209   000FE1                     FSR1            equ	4065	;# 
   210   000FE1                     FSR1L           equ	4065	;# 
   211   000FE2                     FSR1H           equ	4066	;# 
   212   000FE3                     PLUSW1          equ	4067	;# 
   213   000FE4                     PREINC1         equ	4068	;# 
   214   000FE5                     POSTDEC1        equ	4069	;# 
   215   000FE6                     POSTINC1        equ	4070	;# 
   216   000FE7                     INDF1           equ	4071	;# 
   217   000FE8                     WREG            equ	4072	;# 
   218   000FE9                     FSR0            equ	4073	;# 
   219   000FE9                     FSR0L           equ	4073	;# 
   220   000FEA                     FSR0H           equ	4074	;# 
   221   000FEB                     PLUSW0          equ	4075	;# 
   222   000FEC                     PREINC0         equ	4076	;# 
   223   000FED                     POSTDEC0        equ	4077	;# 
   224   000FEE                     POSTINC0        equ	4078	;# 
   225   000FEF                     INDF0           equ	4079	;# 
   226   000FF0                     INTCON3         equ	4080	;# 
   227   000FF1                     INTCON2         equ	4081	;# 
   228   000FF2                     INTCON          equ	4082	;# 
   229   000FF3                     PROD            equ	4083	;# 
   230   000FF3                     PRODL           equ	4083	;# 
   231   000FF4                     PRODH           equ	4084	;# 
   232   000FF5                     TABLAT          equ	4085	;# 
   233   000FF6                     TBLPTR          equ	4086	;# 
   234   000FF6                     TBLPTRL         equ	4086	;# 
   235   000FF7                     TBLPTRH         equ	4087	;# 
   236   000FF8                     TBLPTRU         equ	4088	;# 
   237   000FF9                     PCLAT           equ	4089	;# 
   238   000FF9                     PC              equ	4089	;# 
   239   000FF9                     PCL             equ	4089	;# 
   240   000FFA                     PCLATH          equ	4090	;# 
   241   000FFB                     PCLATU          equ	4091	;# 
   242   000FFC                     STKPTR          equ	4092	;# 
   243   000FFD                     TOS             equ	4093	;# 
   244   000FFD                     TOSL            equ	4093	;# 
   245   000FFE                     TOSH            equ	4094	;# 
   246   000FFF                     TOSU            equ	4095	;# 
   247   000F80                     PORTA           equ	3968	;# 
   248   000F81                     PORTB           equ	3969	;# 
   249   000F82                     PORTC           equ	3970	;# 
   250   000F83                     PORTD           equ	3971	;# 
   251   000F84                     PORTE           equ	3972	;# 
   252   000F89                     LATA            equ	3977	;# 
   253   000F8A                     LATB            equ	3978	;# 
   254   000F8B                     LATC            equ	3979	;# 
   255   000F8C                     LATD            equ	3980	;# 
   256   000F8D                     LATE            equ	3981	;# 
   257   000F92                     TRISA           equ	3986	;# 
   258   000F92                     DDRA            equ	3986	;# 
   259   000F93                     TRISB           equ	3987	;# 
   260   000F93                     DDRB            equ	3987	;# 
   261   000F94                     TRISC           equ	3988	;# 
   262   000F94                     DDRC            equ	3988	;# 
   263   000F95                     TRISD           equ	3989	;# 
   264   000F95                     DDRD            equ	3989	;# 
   265   000F96                     TRISE           equ	3990	;# 
   266   000F96                     DDRE            equ	3990	;# 
   267   000F9B                     OSCTUNE         equ	3995	;# 
   268   000F9D                     PIE1            equ	3997	;# 
   269   000F9E                     PIR1            equ	3998	;# 
   270   000F9F                     IPR1            equ	3999	;# 
   271   000FA0                     PIE2            equ	4000	;# 
   272   000FA1                     PIR2            equ	4001	;# 
   273   000FA2                     IPR2            equ	4002	;# 
   274   000FA6                     EECON1          equ	4006	;# 
   275   000FA7                     EECON2          equ	4007	;# 
   276   000FA8                     EEDATA          equ	4008	;# 
   277   000FA9                     EEADR           equ	4009	;# 
   278   000FAB                     RCSTA           equ	4011	;# 
   279   000FAB                     RCSTA1          equ	4011	;# 
   280   000FAC                     TXSTA           equ	4012	;# 
   281   000FAC                     TXSTA1          equ	4012	;# 
   282   000FAD                     TXREG           equ	4013	;# 
   283   000FAD                     TXREG1          equ	4013	;# 
   284   000FAE                     RCREG           equ	4014	;# 
   285   000FAE                     RCREG1          equ	4014	;# 
   286   000FAF                     SPBRG           equ	4015	;# 
   287   000FAF                     SPBRG1          equ	4015	;# 
   288   000FB0                     SPBRGH          equ	4016	;# 
   289   000FB1                     T3CON           equ	4017	;# 
   290   000FB2                     TMR3            equ	4018	;# 
   291   000FB2                     TMR3L           equ	4018	;# 
   292   000FB3                     TMR3H           equ	4019	;# 
   293   000FB4                     CMCON           equ	4020	;# 
   294   000FB5                     CVRCON          equ	4021	;# 
   295   000FB6                     ECCP1AS         equ	4022	;# 
   296   000FB6                     ECCPAS          equ	4022	;# 
   297   000FB7                     PWM1CON         equ	4023	;# 
   298   000FB7                     ECCP1DEL        equ	4023	;# 
   299   000FB8                     BAUDCON         equ	4024	;# 
   300   000FB8                     BAUDCTL         equ	4024	;# 
   301   000FBA                     CCP2CON         equ	4026	;# 
   302   000FBB                     CCPR2           equ	4027	;# 
   303   000FBB                     CCPR2L          equ	4027	;# 
   304   000FBC                     CCPR2H          equ	4028	;# 
   305   000FBD                     CCP1CON         equ	4029	;# 
   306   000FBE                     CCPR1           equ	4030	;# 
   307   000FBE                     CCPR1L          equ	4030	;# 
   308   000FBF                     CCPR1H          equ	4031	;# 
   309   000FC0                     ADCON2          equ	4032	;# 
   310   000FC1                     ADCON1          equ	4033	;# 
   311   000FC2                     ADCON0          equ	4034	;# 
   312   000FC3                     ADRES           equ	4035	;# 
   313   000FC3                     ADRESL          equ	4035	;# 
   314   000FC4                     ADRESH          equ	4036	;# 
   315   000FC5                     SSPCON2         equ	4037	;# 
   316   000FC6                     SSPCON1         equ	4038	;# 
   317   000FC7                     SSPSTAT         equ	4039	;# 
   318   000FC8                     SSPADD          equ	4040	;# 
   319   000FC9                     SSPBUF          equ	4041	;# 
   320   000FCA                     T2CON           equ	4042	;# 
   321   000FCB                     PR2             equ	4043	;# 
   322   000FCB                     MEMCON          equ	4043	;# 
   323   000FCC                     TMR2            equ	4044	;# 
   324   000FCD                     T1CON           equ	4045	;# 
   325   000FCE                     TMR1            equ	4046	;# 
   326   000FCE                     TMR1L           equ	4046	;# 
   327   000FCF                     TMR1H           equ	4047	;# 
   328   000FD0                     RCON            equ	4048	;# 
   329   000FD1                     WDTCON          equ	4049	;# 
   330   000FD2                     HLVDCON         equ	4050	;# 
   331   000FD2                     LVDCON          equ	4050	;# 
   332   000FD3                     OSCCON          equ	4051	;# 
   333   000FD5                     T0CON           equ	4053	;# 
   334   000FD6                     TMR0            equ	4054	;# 
   335   000FD6                     TMR0L           equ	4054	;# 
   336   000FD7                     TMR0H           equ	4055	;# 
   337   000FD8                     STATUS          equ	4056	;# 
   338   000FD9                     FSR2            equ	4057	;# 
   339   000FD9                     FSR2L           equ	4057	;# 
   340   000FDA                     FSR2H           equ	4058	;# 
   341   000FDB                     PLUSW2          equ	4059	;# 
   342   000FDC                     PREINC2         equ	4060	;# 
   343   000FDD                     POSTDEC2        equ	4061	;# 
   344   000FDE                     POSTINC2        equ	4062	;# 
   345   000FDF                     INDF2           equ	4063	;# 
   346   000FE0                     BSR             equ	4064	;# 
   347   000FE1                     FSR1            equ	4065	;# 
   348   000FE1                     FSR1L           equ	4065	;# 
   349   000FE2                     FSR1H           equ	4066	;# 
   350   000FE3                     PLUSW1          equ	4067	;# 
   351   000FE4                     PREINC1         equ	4068	;# 
   352   000FE5                     POSTDEC1        equ	4069	;# 
   353   000FE6                     POSTINC1        equ	4070	;# 
   354   000FE7                     INDF1           equ	4071	;# 
   355   000FE8                     WREG            equ	4072	;# 
   356   000FE9                     FSR0            equ	4073	;# 
   357   000FE9                     FSR0L           equ	4073	;# 
   358   000FEA                     FSR0H           equ	4074	;# 
   359   000FEB                     PLUSW0          equ	4075	;# 
   360   000FEC                     PREINC0         equ	4076	;# 
   361   000FED                     POSTDEC0        equ	4077	;# 
   362   000FEE                     POSTINC0        equ	4078	;# 
   363   000FEF                     INDF0           equ	4079	;# 
   364   000FF0                     INTCON3         equ	4080	;# 
   365   000FF1                     INTCON2         equ	4081	;# 
   366   000FF2                     INTCON          equ	4082	;# 
   367   000FF3                     PROD            equ	4083	;# 
   368   000FF3                     PRODL           equ	4083	;# 
   369   000FF4                     PRODH           equ	4084	;# 
   370   000FF5                     TABLAT          equ	4085	;# 
   371   000FF6                     TBLPTR          equ	4086	;# 
   372   000FF6                     TBLPTRL         equ	4086	;# 
   373   000FF7                     TBLPTRH         equ	4087	;# 
   374   000FF8                     TBLPTRU         equ	4088	;# 
   375   000FF9                     PCLAT           equ	4089	;# 
   376   000FF9                     PC              equ	4089	;# 
   377   000FF9                     PCL             equ	4089	;# 
   378   000FFA                     PCLATH          equ	4090	;# 
   379   000FFB                     PCLATU          equ	4091	;# 
   380   000FFC                     STKPTR          equ	4092	;# 
   381   000FFD                     TOS             equ	4093	;# 
   382   000FFD                     TOSL            equ	4093	;# 
   383   000FFE                     TOSH            equ	4094	;# 
   384   000FFF                     TOSU            equ	4095	;# 
   385   000F80                     PORTA           equ	3968	;# 
   386   000F81                     PORTB           equ	3969	;# 
   387   000F82                     PORTC           equ	3970	;# 
   388   000F83                     PORTD           equ	3971	;# 
   389   000F84                     PORTE           equ	3972	;# 
   390   000F89                     LATA            equ	3977	;# 
   391   000F8A                     LATB            equ	3978	;# 
   392   000F8B                     LATC            equ	3979	;# 
   393   000F8C                     LATD            equ	3980	;# 
   394   000F8D                     LATE            equ	3981	;# 
   395   000F92                     TRISA           equ	3986	;# 
   396   000F92                     DDRA            equ	3986	;# 
   397   000F93                     TRISB           equ	3987	;# 
   398   000F93                     DDRB            equ	3987	;# 
   399   000F94                     TRISC           equ	3988	;# 
   400   000F94                     DDRC            equ	3988	;# 
   401   000F95                     TRISD           equ	3989	;# 
   402   000F95                     DDRD            equ	3989	;# 
   403   000F96                     TRISE           equ	3990	;# 
   404   000F96                     DDRE            equ	3990	;# 
   405   000F9B                     OSCTUNE         equ	3995	;# 
   406   000F9D                     PIE1            equ	3997	;# 
   407   000F9E                     PIR1            equ	3998	;# 
   408   000F9F                     IPR1            equ	3999	;# 
   409   000FA0                     PIE2            equ	4000	;# 
   410   000FA1                     PIR2            equ	4001	;# 
   411   000FA2                     IPR2            equ	4002	;# 
   412   000FA6                     EECON1          equ	4006	;# 
   413   000FA7                     EECON2          equ	4007	;# 
   414   000FA8                     EEDATA          equ	4008	;# 
   415   000FA9                     EEADR           equ	4009	;# 
   416   000FAB                     RCSTA           equ	4011	;# 
   417   000FAB                     RCSTA1          equ	4011	;# 
   418   000FAC                     TXSTA           equ	4012	;# 
   419   000FAC                     TXSTA1          equ	4012	;# 
   420   000FAD                     TXREG           equ	4013	;# 
   421   000FAD                     TXREG1          equ	4013	;# 
   422   000FAE                     RCREG           equ	4014	;# 
   423   000FAE                     RCREG1          equ	4014	;# 
   424   000FAF                     SPBRG           equ	4015	;# 
   425   000FAF                     SPBRG1          equ	4015	;# 
   426   000FB0                     SPBRGH          equ	4016	;# 
   427   000FB1                     T3CON           equ	4017	;# 
   428   000FB2                     TMR3            equ	4018	;# 
   429   000FB2                     TMR3L           equ	4018	;# 
   430   000FB3                     TMR3H           equ	4019	;# 
   431   000FB4                     CMCON           equ	4020	;# 
   432   000FB5                     CVRCON          equ	4021	;# 
   433   000FB6                     ECCP1AS         equ	4022	;# 
   434   000FB6                     ECCPAS          equ	4022	;# 
   435   000FB7                     PWM1CON         equ	4023	;# 
   436   000FB7                     ECCP1DEL        equ	4023	;# 
   437   000FB8                     BAUDCON         equ	4024	;# 
   438   000FB8                     BAUDCTL         equ	4024	;# 
   439   000FBA                     CCP2CON         equ	4026	;# 
   440   000FBB                     CCPR2           equ	4027	;# 
   441   000FBB                     CCPR2L          equ	4027	;# 
   442   000FBC                     CCPR2H          equ	4028	;# 
   443   000FBD                     CCP1CON         equ	4029	;# 
   444   000FBE                     CCPR1           equ	4030	;# 
   445   000FBE                     CCPR1L          equ	4030	;# 
   446   000FBF                     CCPR1H          equ	4031	;# 
   447   000FC0                     ADCON2          equ	4032	;# 
   448   000FC1                     ADCON1          equ	4033	;# 
   449   000FC2                     ADCON0          equ	4034	;# 
   450   000FC3                     ADRES           equ	4035	;# 
   451   000FC3                     ADRESL          equ	4035	;# 
   452   000FC4                     ADRESH          equ	4036	;# 
   453   000FC5                     SSPCON2         equ	4037	;# 
   454   000FC6                     SSPCON1         equ	4038	;# 
   455   000FC7                     SSPSTAT         equ	4039	;# 
   456   000FC8                     SSPADD          equ	4040	;# 
   457   000FC9                     SSPBUF          equ	4041	;# 
   458   000FCA                     T2CON           equ	4042	;# 
   459   000FCB                     PR2             equ	4043	;# 
   460   000FCB                     MEMCON          equ	4043	;# 
   461   000FCC                     TMR2            equ	4044	;# 
   462   000FCD                     T1CON           equ	4045	;# 
   463   000FCE                     TMR1            equ	4046	;# 
   464   000FCE                     TMR1L           equ	4046	;# 
   465   000FCF                     TMR1H           equ	4047	;# 
   466   000FD0                     RCON            equ	4048	;# 
   467   000FD1                     WDTCON          equ	4049	;# 
   468   000FD2                     HLVDCON         equ	4050	;# 
   469   000FD2                     LVDCON          equ	4050	;# 
   470   000FD3                     OSCCON          equ	4051	;# 
   471   000FD5                     T0CON           equ	4053	;# 
   472   000FD6                     TMR0            equ	4054	;# 
   473   000FD6                     TMR0L           equ	4054	;# 
   474   000FD7                     TMR0H           equ	4055	;# 
   475   000FD8                     STATUS          equ	4056	;# 
   476   000FD9                     FSR2            equ	4057	;# 
   477   000FD9                     FSR2L           equ	4057	;# 
   478   000FDA                     FSR2H           equ	4058	;# 
   479   000FDB                     PLUSW2          equ	4059	;# 
   480   000FDC                     PREINC2         equ	4060	;# 
   481   000FDD                     POSTDEC2        equ	4061	;# 
   482   000FDE                     POSTINC2        equ	4062	;# 
   483   000FDF                     INDF2           equ	4063	;# 
   484   000FE0                     BSR             equ	4064	;# 
   485   000FE1                     FSR1            equ	4065	;# 
   486   000FE1                     FSR1L           equ	4065	;# 
   487   000FE2                     FSR1H           equ	4066	;# 
   488   000FE3                     PLUSW1          equ	4067	;# 
   489   000FE4                     PREINC1         equ	4068	;# 
   490   000FE5                     POSTDEC1        equ	4069	;# 
   491   000FE6                     POSTINC1        equ	4070	;# 
   492   000FE7                     INDF1           equ	4071	;# 
   493   000FE8                     WREG            equ	4072	;# 
   494   000FE9                     FSR0            equ	4073	;# 
   495   000FE9                     FSR0L           equ	4073	;# 
   496   000FEA                     FSR0H           equ	4074	;# 
   497   000FEB                     PLUSW0          equ	4075	;# 
   498   000FEC                     PREINC0         equ	4076	;# 
   499   000FED                     POSTDEC0        equ	4077	;# 
   500   000FEE                     POSTINC0        equ	4078	;# 
   501   000FEF                     INDF0           equ	4079	;# 
   502   000FF0                     INTCON3         equ	4080	;# 
   503   000FF1                     INTCON2         equ	4081	;# 
   504   000FF2                     INTCON          equ	4082	;# 
   505   000FF3                     PROD            equ	4083	;# 
   506   000FF3                     PRODL           equ	4083	;# 
   507   000FF4                     PRODH           equ	4084	;# 
   508   000FF5                     TABLAT          equ	4085	;# 
   509   000FF6                     TBLPTR          equ	4086	;# 
   510   000FF6                     TBLPTRL         equ	4086	;# 
   511   000FF7                     TBLPTRH         equ	4087	;# 
   512   000FF8                     TBLPTRU         equ	4088	;# 
   513   000FF9                     PCLAT           equ	4089	;# 
   514   000FF9                     PC              equ	4089	;# 
   515   000FF9                     PCL             equ	4089	;# 
   516   000FFA                     PCLATH          equ	4090	;# 
   517   000FFB                     PCLATU          equ	4091	;# 
   518   000FFC                     STKPTR          equ	4092	;# 
   519   000FFD                     TOS             equ	4093	;# 
   520   000FFD                     TOSL            equ	4093	;# 
   521   000FFE                     TOSH            equ	4094	;# 
   522   000FFF                     TOSU            equ	4095	;# 
   523   000F80                     PORTA           equ	3968	;# 
   524   000F81                     PORTB           equ	3969	;# 
   525   000F82                     PORTC           equ	3970	;# 
   526   000F83                     PORTD           equ	3971	;# 
   527   000F84                     PORTE           equ	3972	;# 
   528   000F89                     LATA            equ	3977	;# 
   529   000F8A                     LATB            equ	3978	;# 
   530   000F8B                     LATC            equ	3979	;# 
   531   000F8C                     LATD            equ	3980	;# 
   532   000F8D                     LATE            equ	3981	;# 
   533   000F92                     TRISA           equ	3986	;# 
   534   000F92                     DDRA            equ	3986	;# 
   535   000F93                     TRISB           equ	3987	;# 
   536   000F93                     DDRB            equ	3987	;# 
   537   000F94                     TRISC           equ	3988	;# 
   538   000F94                     DDRC            equ	3988	;# 
   539   000F95                     TRISD           equ	3989	;# 
   540   000F95                     DDRD            equ	3989	;# 
   541   000F96                     TRISE           equ	3990	;# 
   542   000F96                     DDRE            equ	3990	;# 
   543   000F9B                     OSCTUNE         equ	3995	;# 
   544   000F9D                     PIE1            equ	3997	;# 
   545   000F9E                     PIR1            equ	3998	;# 
   546   000F9F                     IPR1            equ	3999	;# 
   547   000FA0                     PIE2            equ	4000	;# 
   548   000FA1                     PIR2            equ	4001	;# 
   549   000FA2                     IPR2            equ	4002	;# 
   550   000FA6                     EECON1          equ	4006	;# 
   551   000FA7                     EECON2          equ	4007	;# 
   552   000FA8                     EEDATA          equ	4008	;# 
   553   000FA9                     EEADR           equ	4009	;# 
   554   000FAB                     RCSTA           equ	4011	;# 
   555   000FAB                     RCSTA1          equ	4011	;# 
   556   000FAC                     TXSTA           equ	4012	;# 
   557   000FAC                     TXSTA1          equ	4012	;# 
   558   000FAD                     TXREG           equ	4013	;# 
   559   000FAD                     TXREG1          equ	4013	;# 
   560   000FAE                     RCREG           equ	4014	;# 
   561   000FAE                     RCREG1          equ	4014	;# 
   562   000FAF                     SPBRG           equ	4015	;# 
   563   000FAF                     SPBRG1          equ	4015	;# 
   564   000FB0                     SPBRGH          equ	4016	;# 
   565   000FB1                     T3CON           equ	4017	;# 
   566   000FB2                     TMR3            equ	4018	;# 
   567   000FB2                     TMR3L           equ	4018	;# 
   568   000FB3                     TMR3H           equ	4019	;# 
   569   000FB4                     CMCON           equ	4020	;# 
   570   000FB5                     CVRCON          equ	4021	;# 
   571   000FB6                     ECCP1AS         equ	4022	;# 
   572   000FB6                     ECCPAS          equ	4022	;# 
   573   000FB7                     PWM1CON         equ	4023	;# 
   574   000FB7                     ECCP1DEL        equ	4023	;# 
   575   000FB8                     BAUDCON         equ	4024	;# 
   576   000FB8                     BAUDCTL         equ	4024	;# 
   577   000FBA                     CCP2CON         equ	4026	;# 
   578   000FBB                     CCPR2           equ	4027	;# 
   579   000FBB                     CCPR2L          equ	4027	;# 
   580   000FBC                     CCPR2H          equ	4028	;# 
   581   000FBD                     CCP1CON         equ	4029	;# 
   582   000FBE                     CCPR1           equ	4030	;# 
   583   000FBE                     CCPR1L          equ	4030	;# 
   584   000FBF                     CCPR1H          equ	4031	;# 
   585   000FC0                     ADCON2          equ	4032	;# 
   586   000FC1                     ADCON1          equ	4033	;# 
   587   000FC2                     ADCON0          equ	4034	;# 
   588   000FC3                     ADRES           equ	4035	;# 
   589   000FC3                     ADRESL          equ	4035	;# 
   590   000FC4                     ADRESH          equ	4036	;# 
   591   000FC5                     SSPCON2         equ	4037	;# 
   592   000FC6                     SSPCON1         equ	4038	;# 
   593   000FC7                     SSPSTAT         equ	4039	;# 
   594   000FC8                     SSPADD          equ	4040	;# 
   595   000FC9                     SSPBUF          equ	4041	;# 
   596   000FCA                     T2CON           equ	4042	;# 
   597   000FCB                     PR2             equ	4043	;# 
   598   000FCB                     MEMCON          equ	4043	;# 
   599   000FCC                     TMR2            equ	4044	;# 
   600   000FCD                     T1CON           equ	4045	;# 
   601   000FCE                     TMR1            equ	4046	;# 
   602   000FCE                     TMR1L           equ	4046	;# 
   603   000FCF                     TMR1H           equ	4047	;# 
   604   000FD0                     RCON            equ	4048	;# 
   605   000FD1                     WDTCON          equ	4049	;# 
   606   000FD2                     HLVDCON         equ	4050	;# 
   607   000FD2                     LVDCON          equ	4050	;# 
   608   000FD3                     OSCCON          equ	4051	;# 
   609   000FD5                     T0CON           equ	4053	;# 
   610   000FD6                     TMR0            equ	4054	;# 
   611   000FD6                     TMR0L           equ	4054	;# 
   612   000FD7                     TMR0H           equ	4055	;# 
   613   000FD8                     STATUS          equ	4056	;# 
   614   000FD9                     FSR2            equ	4057	;# 
   615   000FD9                     FSR2L           equ	4057	;# 
   616   000FDA                     FSR2H           equ	4058	;# 
   617   000FDB                     PLUSW2          equ	4059	;# 
   618   000FDC                     PREINC2         equ	4060	;# 
   619   000FDD                     POSTDEC2        equ	4061	;# 
   620   000FDE                     POSTINC2        equ	4062	;# 
   621   000FDF                     INDF2           equ	4063	;# 
   622   000FE0                     BSR             equ	4064	;# 
   623   000FE1                     FSR1            equ	4065	;# 
   624   000FE1                     FSR1L           equ	4065	;# 
   625   000FE2                     FSR1H           equ	4066	;# 
   626   000FE3                     PLUSW1          equ	4067	;# 
   627   000FE4                     PREINC1         equ	4068	;# 
   628   000FE5                     POSTDEC1        equ	4069	;# 
   629   000FE6                     POSTINC1        equ	4070	;# 
   630   000FE7                     INDF1           equ	4071	;# 
   631   000FE8                     WREG            equ	4072	;# 
   632   000FE9                     FSR0            equ	4073	;# 
   633   000FE9                     FSR0L           equ	4073	;# 
   634   000FEA                     FSR0H           equ	4074	;# 
   635   000FEB                     PLUSW0          equ	4075	;# 
   636   000FEC                     PREINC0         equ	4076	;# 
   637   000FED                     POSTDEC0        equ	4077	;# 
   638   000FEE                     POSTINC0        equ	4078	;# 
   639   000FEF                     INDF0           equ	4079	;# 
   640   000FF0                     INTCON3         equ	4080	;# 
   641   000FF1                     INTCON2         equ	4081	;# 
   642   000FF2                     INTCON          equ	4082	;# 
   643   000FF3                     PROD            equ	4083	;# 
   644   000FF3                     PRODL           equ	4083	;# 
   645   000FF4                     PRODH           equ	4084	;# 
   646   000FF5                     TABLAT          equ	4085	;# 
   647   000FF6                     TBLPTR          equ	4086	;# 
   648   000FF6                     TBLPTRL         equ	4086	;# 
   649   000FF7                     TBLPTRH         equ	4087	;# 
   650   000FF8                     TBLPTRU         equ	4088	;# 
   651   000FF9                     PCLAT           equ	4089	;# 
   652   000FF9                     PC              equ	4089	;# 
   653   000FF9                     PCL             equ	4089	;# 
   654   000FFA                     PCLATH          equ	4090	;# 
   655   000FFB                     PCLATU          equ	4091	;# 
   656   000FFC                     STKPTR          equ	4092	;# 
   657   000FFD                     TOS             equ	4093	;# 
   658   000FFD                     TOSL            equ	4093	;# 
   659   000FFE                     TOSH            equ	4094	;# 
   660   000FFF                     TOSU            equ	4095	;# 
   661   000F80                     PORTA           equ	3968	;# 
   662   000F81                     PORTB           equ	3969	;# 
   663   000F82                     PORTC           equ	3970	;# 
   664   000F83                     PORTD           equ	3971	;# 
   665   000F84                     PORTE           equ	3972	;# 
   666   000F89                     LATA            equ	3977	;# 
   667   000F8A                     LATB            equ	3978	;# 
   668   000F8B                     LATC            equ	3979	;# 
   669   000F8C                     LATD            equ	3980	;# 
   670   000F8D                     LATE            equ	3981	;# 
   671   000F92                     TRISA           equ	3986	;# 
   672   000F92                     DDRA            equ	3986	;# 
   673   000F93                     TRISB           equ	3987	;# 
   674   000F93                     DDRB            equ	3987	;# 
   675   000F94                     TRISC           equ	3988	;# 
   676   000F94                     DDRC            equ	3988	;# 
   677   000F95                     TRISD           equ	3989	;# 
   678   000F95                     DDRD            equ	3989	;# 
   679   000F96                     TRISE           equ	3990	;# 
   680   000F96                     DDRE            equ	3990	;# 
   681   000F9B                     OSCTUNE         equ	3995	;# 
   682   000F9D                     PIE1            equ	3997	;# 
   683   000F9E                     PIR1            equ	3998	;# 
   684   000F9F                     IPR1            equ	3999	;# 
   685   000FA0                     PIE2            equ	4000	;# 
   686   000FA1                     PIR2            equ	4001	;# 
   687   000FA2                     IPR2            equ	4002	;# 
   688   000FA6                     EECON1          equ	4006	;# 
   689   000FA7                     EECON2          equ	4007	;# 
   690   000FA8                     EEDATA          equ	4008	;# 
   691   000FA9                     EEADR           equ	4009	;# 
   692   000FAB                     RCSTA           equ	4011	;# 
   693   000FAB                     RCSTA1          equ	4011	;# 
   694   000FAC                     TXSTA           equ	4012	;# 
   695   000FAC                     TXSTA1          equ	4012	;# 
   696   000FAD                     TXREG           equ	4013	;# 
   697   000FAD                     TXREG1          equ	4013	;# 
   698   000FAE                     RCREG           equ	4014	;# 
   699   000FAE                     RCREG1          equ	4014	;# 
   700   000FAF                     SPBRG           equ	4015	;# 
   701   000FAF                     SPBRG1          equ	4015	;# 
   702   000FB0                     SPBRGH          equ	4016	;# 
   703   000FB1                     T3CON           equ	4017	;# 
   704   000FB2                     TMR3            equ	4018	;# 
   705   000FB2                     TMR3L           equ	4018	;# 
   706   000FB3                     TMR3H           equ	4019	;# 
   707   000FB4                     CMCON           equ	4020	;# 
   708   000FB5                     CVRCON          equ	4021	;# 
   709   000FB6                     ECCP1AS         equ	4022	;# 
   710   000FB6                     ECCPAS          equ	4022	;# 
   711   000FB7                     PWM1CON         equ	4023	;# 
   712   000FB7                     ECCP1DEL        equ	4023	;# 
   713   000FB8                     BAUDCON         equ	4024	;# 
   714   000FB8                     BAUDCTL         equ	4024	;# 
   715   000FBA                     CCP2CON         equ	4026	;# 
   716   000FBB                     CCPR2           equ	4027	;# 
   717   000FBB                     CCPR2L          equ	4027	;# 
   718   000FBC                     CCPR2H          equ	4028	;# 
   719   000FBD                     CCP1CON         equ	4029	;# 
   720   000FBE                     CCPR1           equ	4030	;# 
   721   000FBE                     CCPR1L          equ	4030	;# 
   722   000FBF                     CCPR1H          equ	4031	;# 
   723   000FC0                     ADCON2          equ	4032	;# 
   724   000FC1                     ADCON1          equ	4033	;# 
   725   000FC2                     ADCON0          equ	4034	;# 
   726   000FC3                     ADRES           equ	4035	;# 
   727   000FC3                     ADRESL          equ	4035	;# 
   728   000FC4                     ADRESH          equ	4036	;# 
   729   000FC5                     SSPCON2         equ	4037	;# 
   730   000FC6                     SSPCON1         equ	4038	;# 
   731   000FC7                     SSPSTAT         equ	4039	;# 
   732   000FC8                     SSPADD          equ	4040	;# 
   733   000FC9                     SSPBUF          equ	4041	;# 
   734   000FCA                     T2CON           equ	4042	;# 
   735   000FCB                     PR2             equ	4043	;# 
   736   000FCB                     MEMCON          equ	4043	;# 
   737   000FCC                     TMR2            equ	4044	;# 
   738   000FCD                     T1CON           equ	4045	;# 
   739   000FCE                     TMR1            equ	4046	;# 
   740   000FCE                     TMR1L           equ	4046	;# 
   741   000FCF                     TMR1H           equ	4047	;# 
   742   000FD0                     RCON            equ	4048	;# 
   743   000FD1                     WDTCON          equ	4049	;# 
   744   000FD2                     HLVDCON         equ	4050	;# 
   745   000FD2                     LVDCON          equ	4050	;# 
   746   000FD3                     OSCCON          equ	4051	;# 
   747   000FD5                     T0CON           equ	4053	;# 
   748   000FD6                     TMR0            equ	4054	;# 
   749   000FD6                     TMR0L           equ	4054	;# 
   750   000FD7                     TMR0H           equ	4055	;# 
   751   000FD8                     STATUS          equ	4056	;# 
   752   000FD9                     FSR2            equ	4057	;# 
   753   000FD9                     FSR2L           equ	4057	;# 
   754   000FDA                     FSR2H           equ	4058	;# 
   755   000FDB                     PLUSW2          equ	4059	;# 
   756   000FDC                     PREINC2         equ	4060	;# 
   757   000FDD                     POSTDEC2        equ	4061	;# 
   758   000FDE                     POSTINC2        equ	4062	;# 
   759   000FDF                     INDF2           equ	4063	;# 
   760   000FE0                     BSR             equ	4064	;# 
   761   000FE1                     FSR1            equ	4065	;# 
   762   000FE1                     FSR1L           equ	4065	;# 
   763   000FE2                     FSR1H           equ	4066	;# 
   764   000FE3                     PLUSW1          equ	4067	;# 
   765   000FE4                     PREINC1         equ	4068	;# 
   766   000FE5                     POSTDEC1        equ	4069	;# 
   767   000FE6                     POSTINC1        equ	4070	;# 
   768   000FE7                     INDF1           equ	4071	;# 
   769   000FE8                     WREG            equ	4072	;# 
   770   000FE9                     FSR0            equ	4073	;# 
   771   000FE9                     FSR0L           equ	4073	;# 
   772   000FEA                     FSR0H           equ	4074	;# 
   773   000FEB                     PLUSW0          equ	4075	;# 
   774   000FEC                     PREINC0         equ	4076	;# 
   775   000FED                     POSTDEC0        equ	4077	;# 
   776   000FEE                     POSTINC0        equ	4078	;# 
   777   000FEF                     INDF0           equ	4079	;# 
   778   000FF0                     INTCON3         equ	4080	;# 
   779   000FF1                     INTCON2         equ	4081	;# 
   780   000FF2                     INTCON          equ	4082	;# 
   781   000FF3                     PROD            equ	4083	;# 
   782   000FF3                     PRODL           equ	4083	;# 
   783   000FF4                     PRODH           equ	4084	;# 
   784   000FF5                     TABLAT          equ	4085	;# 
   785   000FF6                     TBLPTR          equ	4086	;# 
   786   000FF6                     TBLPTRL         equ	4086	;# 
   787   000FF7                     TBLPTRH         equ	4087	;# 
   788   000FF8                     TBLPTRU         equ	4088	;# 
   789   000FF9                     PCLAT           equ	4089	;# 
   790   000FF9                     PC              equ	4089	;# 
   791   000FF9                     PCL             equ	4089	;# 
   792   000FFA                     PCLATH          equ	4090	;# 
   793   000FFB                     PCLATU          equ	4091	;# 
   794   000FFC                     STKPTR          equ	4092	;# 
   795   000FFD                     TOS             equ	4093	;# 
   796   000FFD                     TOSL            equ	4093	;# 
   797   000FFE                     TOSH            equ	4094	;# 
   798   000FFF                     TOSU            equ	4095	;# 
   799   000F80                     PORTA           equ	3968	;# 
   800   000F81                     PORTB           equ	3969	;# 
   801   000F82                     PORTC           equ	3970	;# 
   802   000F83                     PORTD           equ	3971	;# 
   803   000F84                     PORTE           equ	3972	;# 
   804   000F89                     LATA            equ	3977	;# 
   805   000F8A                     LATB            equ	3978	;# 
   806   000F8B                     LATC            equ	3979	;# 
   807   000F8C                     LATD            equ	3980	;# 
   808   000F8D                     LATE            equ	3981	;# 
   809   000F92                     TRISA           equ	3986	;# 
   810   000F92                     DDRA            equ	3986	;# 
   811   000F93                     TRISB           equ	3987	;# 
   812   000F93                     DDRB            equ	3987	;# 
   813   000F94                     TRISC           equ	3988	;# 
   814   000F94                     DDRC            equ	3988	;# 
   815   000F95                     TRISD           equ	3989	;# 
   816   000F95                     DDRD            equ	3989	;# 
   817   000F96                     TRISE           equ	3990	;# 
   818   000F96                     DDRE            equ	3990	;# 
   819   000F9B                     OSCTUNE         equ	3995	;# 
   820   000F9D                     PIE1            equ	3997	;# 
   821   000F9E                     PIR1            equ	3998	;# 
   822   000F9F                     IPR1            equ	3999	;# 
   823   000FA0                     PIE2            equ	4000	;# 
   824   000FA1                     PIR2            equ	4001	;# 
   825   000FA2                     IPR2            equ	4002	;# 
   826   000FA6                     EECON1          equ	4006	;# 
   827   000FA7                     EECON2          equ	4007	;# 
   828   000FA8                     EEDATA          equ	4008	;# 
   829   000FA9                     EEADR           equ	4009	;# 
   830   000FAB                     RCSTA           equ	4011	;# 
   831   000FAB                     RCSTA1          equ	4011	;# 
   832   000FAC                     TXSTA           equ	4012	;# 
   833   000FAC                     TXSTA1          equ	4012	;# 
   834   000FAD                     TXREG           equ	4013	;# 
   835   000FAD                     TXREG1          equ	4013	;# 
   836   000FAE                     RCREG           equ	4014	;# 
   837   000FAE                     RCREG1          equ	4014	;# 
   838   000FAF                     SPBRG           equ	4015	;# 
   839   000FAF                     SPBRG1          equ	4015	;# 
   840   000FB0                     SPBRGH          equ	4016	;# 
   841   000FB1                     T3CON           equ	4017	;# 
   842   000FB2                     TMR3            equ	4018	;# 
   843   000FB2                     TMR3L           equ	4018	;# 
   844   000FB3                     TMR3H           equ	4019	;# 
   845   000FB4                     CMCON           equ	4020	;# 
   846   000FB5                     CVRCON          equ	4021	;# 
   847   000FB6                     ECCP1AS         equ	4022	;# 
   848   000FB6                     ECCPAS          equ	4022	;# 
   849   000FB7                     PWM1CON         equ	4023	;# 
   850   000FB7                     ECCP1DEL        equ	4023	;# 
   851   000FB8                     BAUDCON         equ	4024	;# 
   852   000FB8                     BAUDCTL         equ	4024	;# 
   853   000FBA                     CCP2CON         equ	4026	;# 
   854   000FBB                     CCPR2           equ	4027	;# 
   855   000FBB                     CCPR2L          equ	4027	;# 
   856   000FBC                     CCPR2H          equ	4028	;# 
   857   000FBD                     CCP1CON         equ	4029	;# 
   858   000FBE                     CCPR1           equ	4030	;# 
   859   000FBE                     CCPR1L          equ	4030	;# 
   860   000FBF                     CCPR1H          equ	4031	;# 
   861   000FC0                     ADCON2          equ	4032	;# 
   862   000FC1                     ADCON1          equ	4033	;# 
   863   000FC2                     ADCON0          equ	4034	;# 
   864   000FC3                     ADRES           equ	4035	;# 
   865   000FC3                     ADRESL          equ	4035	;# 
   866   000FC4                     ADRESH          equ	4036	;# 
   867   000FC5                     SSPCON2         equ	4037	;# 
   868   000FC6                     SSPCON1         equ	4038	;# 
   869   000FC7                     SSPSTAT         equ	4039	;# 
   870   000FC8                     SSPADD          equ	4040	;# 
   871   000FC9                     SSPBUF          equ	4041	;# 
   872   000FCA                     T2CON           equ	4042	;# 
   873   000FCB                     PR2             equ	4043	;# 
   874   000FCB                     MEMCON          equ	4043	;# 
   875   000FCC                     TMR2            equ	4044	;# 
   876   000FCD                     T1CON           equ	4045	;# 
   877   000FCE                     TMR1            equ	4046	;# 
   878   000FCE                     TMR1L           equ	4046	;# 
   879   000FCF                     TMR1H           equ	4047	;# 
   880   000FD0                     RCON            equ	4048	;# 
   881   000FD1                     WDTCON          equ	4049	;# 
   882   000FD2                     HLVDCON         equ	4050	;# 
   883   000FD2                     LVDCON          equ	4050	;# 
   884   000FD3                     OSCCON          equ	4051	;# 
   885   000FD5                     T0CON           equ	4053	;# 
   886   000FD6                     TMR0            equ	4054	;# 
   887   000FD6                     TMR0L           equ	4054	;# 
   888   000FD7                     TMR0H           equ	4055	;# 
   889   000FD8                     STATUS          equ	4056	;# 
   890   000FD9                     FSR2            equ	4057	;# 
   891   000FD9                     FSR2L           equ	4057	;# 
   892   000FDA                     FSR2H           equ	4058	;# 
   893   000FDB                     PLUSW2          equ	4059	;# 
   894   000FDC                     PREINC2         equ	4060	;# 
   895   000FDD                     POSTDEC2        equ	4061	;# 
   896   000FDE                     POSTINC2        equ	4062	;# 
   897   000FDF                     INDF2           equ	4063	;# 
   898   000FE0                     BSR             equ	4064	;# 
   899   000FE1                     FSR1            equ	4065	;# 
   900   000FE1                     FSR1L           equ	4065	;# 
   901   000FE2                     FSR1H           equ	4066	;# 
   902   000FE3                     PLUSW1          equ	4067	;# 
   903   000FE4                     PREINC1         equ	4068	;# 
   904   000FE5                     POSTDEC1        equ	4069	;# 
   905   000FE6                     POSTINC1        equ	4070	;# 
   906   000FE7                     INDF1           equ	4071	;# 
   907   000FE8                     WREG            equ	4072	;# 
   908   000FE9                     FSR0            equ	4073	;# 
   909   000FE9                     FSR0L           equ	4073	;# 
   910   000FEA                     FSR0H           equ	4074	;# 
   911   000FEB                     PLUSW0          equ	4075	;# 
   912   000FEC                     PREINC0         equ	4076	;# 
   913   000FED                     POSTDEC0        equ	4077	;# 
   914   000FEE                     POSTINC0        equ	4078	;# 
   915   000FEF                     INDF0           equ	4079	;# 
   916   000FF0                     INTCON3         equ	4080	;# 
   917   000FF1                     INTCON2         equ	4081	;# 
   918   000FF2                     INTCON          equ	4082	;# 
   919   000FF3                     PROD            equ	4083	;# 
   920   000FF3                     PRODL           equ	4083	;# 
   921   000FF4                     PRODH           equ	4084	;# 
   922   000FF5                     TABLAT          equ	4085	;# 
   923   000FF6                     TBLPTR          equ	4086	;# 
   924   000FF6                     TBLPTRL         equ	4086	;# 
   925   000FF7                     TBLPTRH         equ	4087	;# 
   926   000FF8                     TBLPTRU         equ	4088	;# 
   927   000FF9                     PCLAT           equ	4089	;# 
   928   000FF9                     PC              equ	4089	;# 
   929   000FF9                     PCL             equ	4089	;# 
   930   000FFA                     PCLATH          equ	4090	;# 
   931   000FFB                     PCLATU          equ	4091	;# 
   932   000FFC                     STKPTR          equ	4092	;# 
   933   000FFD                     TOS             equ	4093	;# 
   934   000FFD                     TOSL            equ	4093	;# 
   935   000FFE                     TOSH            equ	4094	;# 
   936   000FFF                     TOSU            equ	4095	;# 
   937   000F80                     PORTA           equ	3968	;# 
   938   000F81                     PORTB           equ	3969	;# 
   939   000F82                     PORTC           equ	3970	;# 
   940   000F83                     PORTD           equ	3971	;# 
   941   000F84                     PORTE           equ	3972	;# 
   942   000F89                     LATA            equ	3977	;# 
   943   000F8A                     LATB            equ	3978	;# 
   944   000F8B                     LATC            equ	3979	;# 
   945   000F8C                     LATD            equ	3980	;# 
   946   000F8D                     LATE            equ	3981	;# 
   947   000F92                     TRISA           equ	3986	;# 
   948   000F92                     DDRA            equ	3986	;# 
   949   000F93                     TRISB           equ	3987	;# 
   950   000F93                     DDRB            equ	3987	;# 
   951   000F94                     TRISC           equ	3988	;# 
   952   000F94                     DDRC            equ	3988	;# 
   953   000F95                     TRISD           equ	3989	;# 
   954   000F95                     DDRD            equ	3989	;# 
   955   000F96                     TRISE           equ	3990	;# 
   956   000F96                     DDRE            equ	3990	;# 
   957   000F9B                     OSCTUNE         equ	3995	;# 
   958   000F9D                     PIE1            equ	3997	;# 
   959   000F9E                     PIR1            equ	3998	;# 
   960   000F9F                     IPR1            equ	3999	;# 
   961   000FA0                     PIE2            equ	4000	;# 
   962   000FA1                     PIR2            equ	4001	;# 
   963   000FA2                     IPR2            equ	4002	;# 
   964   000FA6                     EECON1          equ	4006	;# 
   965   000FA7                     EECON2          equ	4007	;# 
   966   000FA8                     EEDATA          equ	4008	;# 
   967   000FA9                     EEADR           equ	4009	;# 
   968   000FAB                     RCSTA           equ	4011	;# 
   969   000FAB                     RCSTA1          equ	4011	;# 
   970   000FAC                     TXSTA           equ	4012	;# 
   971   000FAC                     TXSTA1          equ	4012	;# 
   972   000FAD                     TXREG           equ	4013	;# 
   973   000FAD                     TXREG1          equ	4013	;# 
   974   000FAE                     RCREG           equ	4014	;# 
   975   000FAE                     RCREG1          equ	4014	;# 
   976   000FAF                     SPBRG           equ	4015	;# 
   977   000FAF                     SPBRG1          equ	4015	;# 
   978   000FB0                     SPBRGH          equ	4016	;# 
   979   000FB1                     T3CON           equ	4017	;# 
   980   000FB2                     TMR3            equ	4018	;# 
   981   000FB2                     TMR3L           equ	4018	;# 
   982   000FB3                     TMR3H           equ	4019	;# 
   983   000FB4                     CMCON           equ	4020	;# 
   984   000FB5                     CVRCON          equ	4021	;# 
   985   000FB6                     ECCP1AS         equ	4022	;# 
   986   000FB6                     ECCPAS          equ	4022	;# 
   987   000FB7                     PWM1CON         equ	4023	;# 
   988   000FB7                     ECCP1DEL        equ	4023	;# 
   989   000FB8                     BAUDCON         equ	4024	;# 
   990   000FB8                     BAUDCTL         equ	4024	;# 
   991   000FBA                     CCP2CON         equ	4026	;# 
   992   000FBB                     CCPR2           equ	4027	;# 
   993   000FBB                     CCPR2L          equ	4027	;# 
   994   000FBC                     CCPR2H          equ	4028	;# 
   995   000FBD                     CCP1CON         equ	4029	;# 
   996   000FBE                     CCPR1           equ	4030	;# 
   997   000FBE                     CCPR1L          equ	4030	;# 
   998   000FBF                     CCPR1H          equ	4031	;# 
   999   000FC0                     ADCON2          equ	4032	;# 
  1000   000FC1                     ADCON1          equ	4033	;# 
  1001   000FC2                     ADCON0          equ	4034	;# 
  1002   000FC3                     ADRES           equ	4035	;# 
  1003   000FC3                     ADRESL          equ	4035	;# 
  1004   000FC4                     ADRESH          equ	4036	;# 
  1005   000FC5                     SSPCON2         equ	4037	;# 
  1006   000FC6                     SSPCON1         equ	4038	;# 
  1007   000FC7                     SSPSTAT         equ	4039	;# 
  1008   000FC8                     SSPADD          equ	4040	;# 
  1009   000FC9                     SSPBUF          equ	4041	;# 
  1010   000FCA                     T2CON           equ	4042	;# 
  1011   000FCB                     PR2             equ	4043	;# 
  1012   000FCB                     MEMCON          equ	4043	;# 
  1013   000FCC                     TMR2            equ	4044	;# 
  1014   000FCD                     T1CON           equ	4045	;# 
  1015   000FCE                     TMR1            equ	4046	;# 
  1016   000FCE                     TMR1L           equ	4046	;# 
  1017   000FCF                     TMR1H           equ	4047	;# 
  1018   000FD0                     RCON            equ	4048	;# 
  1019   000FD1                     WDTCON          equ	4049	;# 
  1020   000FD2                     HLVDCON         equ	4050	;# 
  1021   000FD2                     LVDCON          equ	4050	;# 
  1022   000FD3                     OSCCON          equ	4051	;# 
  1023   000FD5                     T0CON           equ	4053	;# 
  1024   000FD6                     TMR0            equ	4054	;# 
  1025   000FD6                     TMR0L           equ	4054	;# 
  1026   000FD7                     TMR0H           equ	4055	;# 
  1027   000FD8                     STATUS          equ	4056	;# 
  1028   000FD9                     FSR2            equ	4057	;# 
  1029   000FD9                     FSR2L           equ	4057	;# 
  1030   000FDA                     FSR2H           equ	4058	;# 
  1031   000FDB                     PLUSW2          equ	4059	;# 
  1032   000FDC                     PREINC2         equ	4060	;# 
  1033   000FDD                     POSTDEC2        equ	4061	;# 
  1034   000FDE                     POSTINC2        equ	4062	;# 
  1035   000FDF                     INDF2           equ	4063	;# 
  1036   000FE0                     BSR             equ	4064	;# 
  1037   000FE1                     FSR1            equ	4065	;# 
  1038   000FE1                     FSR1L           equ	4065	;# 
  1039   000FE2                     FSR1H           equ	4066	;# 
  1040   000FE3                     PLUSW1          equ	4067	;# 
  1041   000FE4                     PREINC1         equ	4068	;# 
  1042   000FE5                     POSTDEC1        equ	4069	;# 
  1043   000FE6                     POSTINC1        equ	4070	;# 
  1044   000FE7                     INDF1           equ	4071	;# 
  1045   000FE8                     WREG            equ	4072	;# 
  1046   000FE9                     FSR0            equ	4073	;# 
  1047   000FE9                     FSR0L           equ	4073	;# 
  1048   000FEA                     FSR0H           equ	4074	;# 
  1049   000FEB                     PLUSW0          equ	4075	;# 
  1050   000FEC                     PREINC0         equ	4076	;# 
  1051   000FED                     POSTDEC0        equ	4077	;# 
  1052   000FEE                     POSTINC0        equ	4078	;# 
  1053   000FEF                     INDF0           equ	4079	;# 
  1054   000FF0                     INTCON3         equ	4080	;# 
  1055   000FF1                     INTCON2         equ	4081	;# 
  1056   000FF2                     INTCON          equ	4082	;# 
  1057   000FF3                     PROD            equ	4083	;# 
  1058   000FF3                     PRODL           equ	4083	;# 
  1059   000FF4                     PRODH           equ	4084	;# 
  1060   000FF5                     TABLAT          equ	4085	;# 
  1061   000FF6                     TBLPTR          equ	4086	;# 
  1062   000FF6                     TBLPTRL         equ	4086	;# 
  1063   000FF7                     TBLPTRH         equ	4087	;# 
  1064   000FF8                     TBLPTRU         equ	4088	;# 
  1065   000FF9                     PCLAT           equ	4089	;# 
  1066   000FF9                     PC              equ	4089	;# 
  1067   000FF9                     PCL             equ	4089	;# 
  1068   000FFA                     PCLATH          equ	4090	;# 
  1069   000FFB                     PCLATU          equ	4091	;# 
  1070   000FFC                     STKPTR          equ	4092	;# 
  1071   000FFD                     TOS             equ	4093	;# 
  1072   000FFD                     TOSL            equ	4093	;# 
  1073   000FFE                     TOSH            equ	4094	;# 
  1074   000FFF                     TOSU            equ	4095	;# 
  1075                           
  1076                           	psect	smallconst
  1077   000600                     __psmallconst:
  1078                           	callstack 0
  1079   000600  00                 	db	0
  1080   000601                     _digit_map:
  1081                           	callstack 0
  1082   000601  3F                 	db	63
  1083   000602  06                 	db	6
  1084   000603  5B                 	db	91
  1085   000604  4F                 	db	79
  1086   000605  66                 	db	102
  1087   000606  6D                 	db	109
  1088   000607  7D                 	db	125
  1089   000608  07                 	db	7
  1090   000609  7F                 	db	127
  1091   00060A  6F                 	db	111
  1092   00060B                     __end_of_digit_map:
  1093                           	callstack 0
  1094   00060B  00                 	db	0	; dummy byte at the end
  1095   000600                     __smallconst    set	__psmallconst
  1096   000600                     __mediumconst   set	__psmallconst
  1097   000001                     __activetblptr  equ	1
  1098                           
  1099                           	psect	nvCOMRAM
  1100   000028                     __pnvCOMRAM:
  1101                           	callstack 0
  1102   000028                     _current_level:
  1103                           	callstack 0
  1104   000028                     	ds	1
  1105   007E11                     _GO_nDONE       set	32273
  1106   000FC3                     _ADRESL         set	4035
  1107   000FC4                     _ADRESH         set	4036
  1108   000FC2                     _ADCON0         set	4034
  1109   000FC1                     _ADCON1         set	4033
  1110   000F92                     _TRISAbits      set	3986
  1111   000F8D                     _LATEbits       set	3981
  1112   000F96                     _TRISEbits      set	3990
  1113   000F8B                     _LATC           set	3979
  1114   000F94                     _TRISC          set	3988
  1115   000F81                     _PORTBbits      set	3969
  1116   000F93                     _TRISB          set	3987
  1117   000F8C                     _LATD           set	3980
  1118   000F95                     _TRISD          set	3989
  1119                           
  1120                           ; #config settings
  1121                           
  1122                           	psect	cinit
  1123   000A78                     __pcinit:
  1124                           	callstack 0
  1125   000A78                     start_initialization:
  1126                           	callstack 0
  1127   000A78                     __initialization:
  1128                           	callstack 0
  1129                           
  1130                           ; Clear objects allocated to COMRAM (13 bytes)
  1131   000A78  EE00  F01B         	lfsr	0,__pbssCOMRAM
  1132   000A7C  0E0D               	movlw	13
  1133   000A7E                     clear_0:
  1134   000A7E  6AEE               	clrf	postinc0,c
  1135   000A80  06E8               	decf	wreg,f,c
  1136   000A82  E1FD               	bnz	clear_0
  1137   000A84                     end_of_initialization:
  1138                           	callstack 0
  1139   000A84                     __end_of__initialization:
  1140                           	callstack 0
  1141   000A84  0E00               	movlw	low (__Lsmallconst shr (0+16))
  1142   000A86  6EF8               	movwf	tblptru,c
  1143   000A88  0E06               	movlw	high __Lsmallconst
  1144   000A8A  6EF7               	movwf	tblptrh,c
  1145   000A8C  0100               	movlb	0
  1146   000A8E  EF56  F005         	goto	_main	;jump to C main() function
  1147                           
  1148                           	psect	bssCOMRAM
  1149   00001B                     __pbssCOMRAM:
  1150                           	callstack 0
  1151   00001B                     _sequence:
  1152                           	callstack 0
  1153   00001B                     	ds	9
  1154   000024                     _seed:
  1155                           	callstack 0
  1156   000024                     	ds	4
  1157                           
  1158                           	psect	cstackCOMRAM
  1159   000001                     __pcstackCOMRAM:
  1160                           	callstack 0
  1161   000001                     ?_adc_read:
  1162                           	callstack 0
  1163   000001                     ?___awmod:
  1164                           	callstack 0
  1165   000001                     ?___lmul:
  1166                           	callstack 0
  1167   000001                     ___awmod@dividend:
  1168                           	callstack 0
  1169   000001                     ___lmul@multiplier:
  1170                           	callstack 0
  1171   000001                     ??_leds_flash:
  1172   000001                     ??_buzzer_play_error:
  1173   000001                     ??_buzzer_play_success:
  1174                           
  1175                           ; 1 bytes @ 0x0
  1176   000001                     	ds	2
  1177   000003                     leds_flash@index:
  1178                           	callstack 0
  1179   000003                     buzzer_play_error@i:
  1180                           	callstack 0
  1181   000003                     ___awmod@divisor:
  1182                           	callstack 0
  1183   000003                     ??_adc_read:
  1184                           
  1185                           ; 1 bytes @ 0x2
  1186   000003                     	ds	2
  1187   000005                     adc_read@channel:
  1188                           	callstack 0
  1189   000005                     ___awmod@counter:
  1190                           	callstack 0
  1191   000005                     ___lmul@multiplicand:
  1192                           	callstack 0
  1193   000005                     
  1194                           ; 1 bytes @ 0x4
  1195   000005                     	ds	1
  1196   000006                     ___awmod@sign:
  1197                           	callstack 0
  1198   000006                     
  1199                           ; 1 bytes @ 0x5
  1200   000006                     	ds	1
  1201   000007                     ??_display_show_digit:
  1202                           
  1203                           ; 1 bytes @ 0x6
  1204   000007                     	ds	1
  1205   000008                     display_show_digit@digit:
  1206                           	callstack 0
  1207                           
  1208                           ; 1 bytes @ 0x7
  1209   000008                     	ds	1
  1210   000009                     ___lmul@product:
  1211                           	callstack 0
  1212   000009                     
  1213                           ; 1 bytes @ 0x8
  1214   000009                     	ds	4
  1215   00000D                     ?_rand:
  1216                           	callstack 0
  1217                           
  1218                           ; 2 bytes @ 0xC
  1219   00000D                     	ds	2
  1220   00000F                     ??_rand:
  1221                           
  1222                           ; 1 bytes @ 0xE
  1223   00000F                     	ds	4
  1224   000013                     generate_sequence@i:
  1225                           	callstack 0
  1226   000013                     
  1227                           ; 1 bytes @ 0x12
  1228   000013                     	ds	1
  1229   000014                     ??_game_loop:
  1230   000014                     
  1231                           ; 1 bytes @ 0x13
  1232   000014                     	ds	4
  1233   000018                     game_loop@i:
  1234                           	callstack 0
  1235                           
  1236                           ; 1 bytes @ 0x17
  1237   000018                     	ds	1
  1238   000019                     game_loop@i_106:
  1239                           	callstack 0
  1240                           
  1241                           ; 1 bytes @ 0x18
  1242   000019                     	ds	1
  1243   00001A                     game_loop@btn:
  1244                           	callstack 0
  1245                           
  1246                           ; 1 bytes @ 0x19
  1247   00001A                     	ds	1
  1248   00001B                     
  1249                           ; 1 bytes @ 0x1A
  1250 ;;
  1251 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1252 ;;
  1253 ;; *************** function _main *****************
  1254 ;; Defined at:
  1255 ;;		line 16 in file "main.c"
  1256 ;; Parameters:    Size  Location     Type
  1257 ;;		None
  1258 ;; Auto vars:     Size  Location     Type
  1259 ;;		None
  1260 ;; Return value:  Size  Location     Type
  1261 ;;                  1    wreg      void 
  1262 ;; Registers used:
  1263 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1264 ;; Tracked objects:
  1265 ;;		On entry : 0/0
  1266 ;;		On exit  : 0/0
  1267 ;;		Unchanged: 0/0
  1268 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1269 ;;      Params:         0       0       0       0       0       0       0
  1270 ;;      Locals:         0       0       0       0       0       0       0
  1271 ;;      Temps:          0       0       0       0       0       0       0
  1272 ;;      Totals:         0       0       0       0       0       0       0
  1273 ;;Total ram usage:        0 bytes
  1274 ;; Hardware stack levels required when called: 5
  1275 ;; This function calls:
  1276 ;;		_game_init
  1277 ;;		_game_loop
  1278 ;; This function is called by:
  1279 ;;		Startup code after reset
  1280 ;; This function uses a non-reentrant model
  1281 ;;
  1282                           
  1283                           	psect	text0
  1284   000AAC                     __ptext0:
  1285                           	callstack 0
  1286   000AAC                     _main:
  1287                           	callstack 26
  1288   000AAC  EC49  F005         	call	_game_init	;wreg free
  1289   000AB0                     l9:
  1290   000AB0  EC06  F003         	call	_game_loop	;wreg free
  1291   000AB4  EF58  F005         	goto	l9
  1292   000AB8  EFFE  F03F         	goto	start
  1293   000ABC                     __end_of_main:
  1294                           	callstack 0
  1295                           
  1296 ;; *************** function _game_loop *****************
  1297 ;; Defined at:
  1298 ;;		line 39 in file "game.c"
  1299 ;; Parameters:    Size  Location     Type
  1300 ;;		None
  1301 ;; Auto vars:     Size  Location     Type
  1302 ;;  btn             1   25[COMRAM] char 
  1303 ;;  i               1   24[COMRAM] unsigned char 
  1304 ;;  i               1   23[COMRAM] unsigned char 
  1305 ;; Return value:  Size  Location     Type
  1306 ;;                  1    wreg      void 
  1307 ;; Registers used:
  1308 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1309 ;; Tracked objects:
  1310 ;;		On entry : 0/0
  1311 ;;		On exit  : 0/0
  1312 ;;		Unchanged: 0/0
  1313 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1314 ;;      Params:         0       0       0       0       0       0       0
  1315 ;;      Locals:         3       0       0       0       0       0       0
  1316 ;;      Temps:          4       0       0       0       0       0       0
  1317 ;;      Totals:         7       0       0       0       0       0       0
  1318 ;;Total ram usage:        7 bytes
  1319 ;; Hardware stack levels used: 1
  1320 ;; Hardware stack levels required when called: 4
  1321 ;; This function calls:
  1322 ;;		_buttons_read
  1323 ;;		_buzzer_play_error
  1324 ;;		_buzzer_play_success
  1325 ;;		_display_show_digit
  1326 ;;		_game_reset
  1327 ;;		_ldr_dark_detected
  1328 ;;		_leds_flash
  1329 ;; This function is called by:
  1330 ;;		_main
  1331 ;; This function uses a non-reentrant model
  1332 ;;
  1333                           
  1334                           	psect	text1
  1335   00060C                     __ptext1:
  1336                           	callstack 0
  1337   00060C                     _game_loop:
  1338                           	callstack 26
  1339   00060C                     
  1340                           ;game.c: 40:     if (!ldr_dark_detected()) return;
  1341   00060C  EC1C  F005         	call	_ldr_dark_detected	;wreg free
  1342   000610  0900               	iorlw	0
  1343   000612  A4D8               	btfss	status,2,c
  1344   000614  EF0E  F003         	goto	u401
  1345   000618  EF10  F003         	goto	u400
  1346   00061C                     u401:
  1347   00061C  EF12  F003         	goto	l1163
  1348   000620                     u400:
  1349   000620  EFA1  F003         	goto	l59
  1350   000624                     l1163:
  1351                           
  1352                           ;game.c: 42:     _delay((unsigned long)((500)*(8000000/4000.0)));
  1353   000624  0E06               	movlw	6
  1354   000626  6E15               	movwf	(??_game_loop+1)^0,c
  1355   000628  0E13               	movlw	19
  1356   00062A  6E14               	movwf	??_game_loop^0,c
  1357   00062C  0EAE               	movlw	174
  1358   00062E                     u467:
  1359   00062E  2EE8               	decfsz	wreg,f,c
  1360   000630  D7FE               	bra	u467
  1361   000632  2E14               	decfsz	??_game_loop^0,f,c
  1362   000634  D7FC               	bra	u467
  1363   000636  2E15               	decfsz	(??_game_loop+1)^0,f,c
  1364   000638  D7FA               	bra	u467
  1365   00063A                     
  1366                           ;game.c: 44:     for (uint8_t i = 0; i < current_level; i++) {
  1367   00063A  6A18               	clrf	game_loop@i^0,c
  1368   00063C  EF33  F003         	goto	l1173
  1369   000640                     l1167:
  1370                           
  1371                           ;game.c: 45:         leds_flash(sequence[i]);
  1372   000640  5018               	movf	game_loop@i^0,w,c
  1373   000642  0F1B               	addlw	low _sequence
  1374   000644  6ED9               	movwf	fsr2l,c
  1375   000646  6ADA               	clrf	fsr2h,c
  1376   000648  50DF               	movf	indf2,w,c
  1377   00064A  ECBD  F004         	call	_leds_flash
  1378   00064E                     
  1379                           ;game.c: 46:         _delay((unsigned long)((300)*(8000000/4000.0)));
  1380   00064E  0E04               	movlw	4
  1381   000650  6E15               	movwf	(??_game_loop+1)^0,c
  1382   000652  0E0C               	movlw	12
  1383   000654  6E14               	movwf	??_game_loop^0,c
  1384   000656  0E34               	movlw	52
  1385   000658                     u477:
  1386   000658  2EE8               	decfsz	wreg,f,c
  1387   00065A  D7FE               	bra	u477
  1388   00065C  2E14               	decfsz	??_game_loop^0,f,c
  1389   00065E  D7FC               	bra	u477
  1390   000660  2E15               	decfsz	(??_game_loop+1)^0,f,c
  1391   000662  D7FA               	bra	u477
  1392   000664                     
  1393                           ;game.c: 47:     }
  1394   000664  2A18               	incf	game_loop@i^0,f,c
  1395   000666                     l1173:
  1396   000666  5028               	movf	_current_level^0,w,c
  1397   000668  5C18               	subwf	game_loop@i^0,w,c
  1398   00066A  A0D8               	btfss	status,0,c
  1399   00066C  EF3A  F003         	goto	u411
  1400   000670  EF3C  F003         	goto	u410
  1401   000674                     u411:
  1402   000674  EF20  F003         	goto	l1167
  1403   000678                     u410:
  1404   000678                     
  1405                           ;game.c: 49:     for (uint8_t i = 0; i < current_level; i++) {
  1406   000678  6A19               	clrf	game_loop@i_106^0,c
  1407   00067A  EF6F  F003         	goto	l1191
  1408   00067E                     l64:
  1409                           
  1410                           ;game.c: 50:         int8_t btn = -1;
  1411   00067E  681A               	setf	game_loop@btn^0,c
  1412                           
  1413                           ;game.c: 51:         while (btn == -1) {
  1414   000680  EF45  F003         	goto	l1177
  1415   000684                     l1175:
  1416                           
  1417                           ;game.c: 52:             btn = buttons_read();
  1418   000684  EC93  F004         	call	_buttons_read	;wreg free
  1419   000688  6E1A               	movwf	game_loop@btn^0,c
  1420   00068A                     l1177:
  1421                           
  1422                           ;game.c: 51:         while (btn == -1) {
  1423   00068A  281A               	incf	game_loop@btn^0,w,c
  1424   00068C  B4D8               	btfsc	status,2,c
  1425   00068E  EF4B  F003         	goto	u421
  1426   000692  EF4D  F003         	goto	u420
  1427   000696                     u421:
  1428   000696  EF42  F003         	goto	l1175
  1429   00069A                     u420:
  1430   00069A                     
  1431                           ;game.c: 54:         leds_flash(btn);
  1432   00069A  501A               	movf	game_loop@btn^0,w,c
  1433   00069C  ECBD  F004         	call	_leds_flash
  1434   0006A0                     
  1435                           ;game.c: 55:         if (btn != sequence[i]) {
  1436   0006A0  5019               	movf	game_loop@i_106^0,w,c
  1437   0006A2  0F1B               	addlw	low _sequence
  1438   0006A4  6ED9               	movwf	fsr2l,c
  1439   0006A6  6ADA               	clrf	fsr2h,c
  1440   0006A8  50DF               	movf	indf2,w,c
  1441   0006AA  6E14               	movwf	??_game_loop^0,c
  1442   0006AC  6A15               	clrf	(??_game_loop+1)^0,c
  1443   0006AE  C01A  F016         	movff	game_loop@btn,??_game_loop+2
  1444   0006B2  6A17               	clrf	(??_game_loop+3)^0,c
  1445   0006B4  BE16               	btfsc	(??_game_loop+2)^0,7,c
  1446   0006B6  0617               	decf	(??_game_loop+3)^0,f,c
  1447   0006B8  5014               	movf	??_game_loop^0,w,c
  1448   0006BA  1816               	xorwf	(??_game_loop+2)^0,w,c
  1449   0006BC  E109               	bnz	u430
  1450   0006BE  5015               	movf	(??_game_loop+1)^0,w,c
  1451   0006C0  1817               	xorwf	(??_game_loop+3)^0,w,c
  1452   0006C2  B4D8               	btfsc	status,2,c
  1453   0006C4  EF66  F003         	goto	u431
  1454   0006C8  EF68  F003         	goto	u430
  1455   0006CC                     u431:
  1456   0006CC  EF6E  F003         	goto	l1189
  1457   0006D0                     u430:
  1458   0006D0                     
  1459                           ;game.c: 56:             buzzer_play_error();
  1460   0006D0  EC64  F004         	call	_buzzer_play_error	;wreg free
  1461   0006D4                     l1185:
  1462                           
  1463                           ;game.c: 57:             game_reset();
  1464   0006D4  EC5E  F005         	call	_game_reset	;wreg free
  1465   0006D8  EFA1  F003         	goto	l59
  1466   0006DC                     l1189:
  1467                           
  1468                           ;game.c: 60:     }
  1469   0006DC  2A19               	incf	game_loop@i_106^0,f,c
  1470   0006DE                     l1191:
  1471   0006DE  5028               	movf	_current_level^0,w,c
  1472   0006E0  5C19               	subwf	game_loop@i_106^0,w,c
  1473   0006E2  A0D8               	btfss	status,0,c
  1474   0006E4  EF76  F003         	goto	u441
  1475   0006E8  EF78  F003         	goto	u440
  1476   0006EC                     u441:
  1477   0006EC  EF3F  F003         	goto	l64
  1478   0006F0                     u440:
  1479   0006F0                     
  1480                           ;game.c: 62:     buzzer_play_success();
  1481   0006F0  EC2D  F005         	call	_buzzer_play_success	;wreg free
  1482   0006F4                     
  1483                           ;game.c: 63:     display_show_digit(current_level);
  1484   0006F4  5028               	movf	_current_level^0,w,c
  1485   0006F6  EC09  F005         	call	_display_show_digit
  1486   0006FA                     
  1487                           ;game.c: 65:     if (current_level < 9) {
  1488   0006FA  0E09               	movlw	9
  1489   0006FC  6028               	cpfslt	_current_level^0,c
  1490   0006FE  EF83  F003         	goto	u451
  1491   000702  EF85  F003         	goto	u450
  1492   000706                     u451:
  1493   000706  EF94  F003         	goto	l1203
  1494   00070A                     u450:
  1495   00070A                     
  1496                           ;game.c: 66:         current_level++;
  1497   00070A  2A28               	incf	_current_level^0,f,c
  1498   00070C                     
  1499                           ;game.c: 67:         _delay((unsigned long)((800)*(8000000/4000.0)));
  1500   00070C  0E09               	movlw	9
  1501   00070E  6E15               	movwf	(??_game_loop+1)^0,c
  1502   000710  0E1E               	movlw	30
  1503   000712  6E14               	movwf	??_game_loop^0,c
  1504   000714  0EE4               	movlw	228
  1505   000716                     u487:
  1506   000716  2EE8               	decfsz	wreg,f,c
  1507   000718  D7FE               	bra	u487
  1508   00071A  2E14               	decfsz	??_game_loop^0,f,c
  1509   00071C  D7FC               	bra	u487
  1510   00071E  2E15               	decfsz	(??_game_loop+1)^0,f,c
  1511   000720  D7FA               	bra	u487
  1512   000722  D000               	nop2	
  1513                           
  1514                           ;game.c: 68:     } else {
  1515   000724  EFA1  F003         	goto	l59
  1516   000728                     l1203:
  1517                           
  1518                           ;game.c: 70:         _delay((unsigned long)((1000)*(8000000/4000.0)));
  1519   000728  0E0B               	movlw	11
  1520   00072A  6E15               	movwf	(??_game_loop+1)^0,c
  1521   00072C  0E26               	movlw	38
  1522   00072E  6E14               	movwf	??_game_loop^0,c
  1523   000730  0E5E               	movlw	94
  1524   000732                     u497:
  1525   000732  2EE8               	decfsz	wreg,f,c
  1526   000734  D7FE               	bra	u497
  1527   000736  2E14               	decfsz	??_game_loop^0,f,c
  1528   000738  D7FC               	bra	u497
  1529   00073A  2E15               	decfsz	(??_game_loop+1)^0,f,c
  1530   00073C  D7FA               	bra	u497
  1531   00073E  EF6A  F003         	goto	l1185
  1532   000742                     l59:
  1533   000742  0012               	return		;funcret
  1534   000744                     __end_of_game_loop:
  1535                           	callstack 0
  1536                           
  1537 ;; *************** function _leds_flash *****************
  1538 ;; Defined at:
  1539 ;;		line 11 in file "leds.c"
  1540 ;; Parameters:    Size  Location     Type
  1541 ;;  index           1    wreg     unsigned char 
  1542 ;; Auto vars:     Size  Location     Type
  1543 ;;  index           1    2[COMRAM] unsigned char 
  1544 ;; Return value:  Size  Location     Type
  1545 ;;                  1    wreg      void 
  1546 ;; Registers used:
  1547 ;;		wreg, status,2, status,0
  1548 ;; Tracked objects:
  1549 ;;		On entry : 0/0
  1550 ;;		On exit  : 0/0
  1551 ;;		Unchanged: 0/0
  1552 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1553 ;;      Params:         0       0       0       0       0       0       0
  1554 ;;      Locals:         1       0       0       0       0       0       0
  1555 ;;      Temps:          2       0       0       0       0       0       0
  1556 ;;      Totals:         3       0       0       0       0       0       0
  1557 ;;Total ram usage:        3 bytes
  1558 ;; Hardware stack levels used: 1
  1559 ;; This function calls:
  1560 ;;		Nothing
  1561 ;; This function is called by:
  1562 ;;		_game_loop
  1563 ;;		_leds_show_sequence
  1564 ;; This function uses a non-reentrant model
  1565 ;;
  1566                           
  1567                           	psect	text2
  1568   00097A                     __ptext2:
  1569                           	callstack 0
  1570   00097A                     _leds_flash:
  1571                           	callstack 29
  1572                           
  1573                           ;incstack = 0
  1574                           ;leds_flash@index stored from wreg
  1575   00097A  6E03               	movwf	leds_flash@index^0,c
  1576   00097C                     
  1577                           ;leds.c: 12:     LATD = (1 << index);
  1578   00097C  C003  F001         	movff	leds_flash@index,??_leds_flash
  1579   000980  0E01               	movlw	1
  1580   000982  6E02               	movwf	(??_leds_flash+1)^0,c
  1581   000984  2A01               	incf	??_leds_flash^0,f,c
  1582   000986  EFC7  F004         	goto	u144
  1583   00098A                     u145:
  1584   00098A  90D8               	bcf	status,0,c
  1585   00098C  3602               	rlcf	(??_leds_flash+1)^0,f,c
  1586   00098E                     u144:
  1587   00098E  2E01               	decfsz	??_leds_flash^0,f,c
  1588   000990  EFC5  F004         	goto	u145
  1589   000994  5002               	movf	(??_leds_flash+1)^0,w,c
  1590   000996  6E8C               	movwf	140,c	;volatile
  1591   000998                     
  1592                           ;leds.c: 13:     _delay((unsigned long)((300)*(8000000/4000.0)));
  1593   000998  0E04               	movlw	4
  1594   00099A  6E02               	movwf	(??_leds_flash+1)^0,c
  1595   00099C  0E0C               	movlw	12
  1596   00099E  6E01               	movwf	??_leds_flash^0,c
  1597   0009A0  0E34               	movlw	52
  1598   0009A2                     u507:
  1599   0009A2  2EE8               	decfsz	wreg,f,c
  1600   0009A4  D7FE               	bra	u507
  1601   0009A6  2E01               	decfsz	??_leds_flash^0,f,c
  1602   0009A8  D7FC               	bra	u507
  1603   0009AA  2E02               	decfsz	(??_leds_flash+1)^0,f,c
  1604   0009AC  D7FA               	bra	u507
  1605   0009AE                     
  1606                           ;leds.c: 14:     LATD = 0;
  1607   0009AE  6A8C               	clrf	140,c	;volatile
  1608   0009B0  0012               	return		;funcret
  1609   0009B2                     __end_of_leds_flash:
  1610                           	callstack 0
  1611                           
  1612 ;; *************** function _ldr_dark_detected *****************
  1613 ;; Defined at:
  1614 ;;		line 20 in file "sensors.c"
  1615 ;; Parameters:    Size  Location     Type
  1616 ;;		None
  1617 ;; Auto vars:     Size  Location     Type
  1618 ;;		None
  1619 ;; Return value:  Size  Location     Type
  1620 ;;                  1    wreg      unsigned char 
  1621 ;; Registers used:
  1622 ;;		wreg, status,2, status,0, cstack
  1623 ;; Tracked objects:
  1624 ;;		On entry : 0/0
  1625 ;;		On exit  : 0/0
  1626 ;;		Unchanged: 0/0
  1627 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1628 ;;      Params:         0       0       0       0       0       0       0
  1629 ;;      Locals:         0       0       0       0       0       0       0
  1630 ;;      Temps:          0       0       0       0       0       0       0
  1631 ;;      Totals:         0       0       0       0       0       0       0
  1632 ;;Total ram usage:        0 bytes
  1633 ;; Hardware stack levels used: 1
  1634 ;; Hardware stack levels required when called: 1
  1635 ;; This function calls:
  1636 ;;		_adc_read
  1637 ;; This function is called by:
  1638 ;;		_game_loop
  1639 ;; This function uses a non-reentrant model
  1640 ;;
  1641                           
  1642                           	psect	text3
  1643   000A38                     __ptext3:
  1644                           	callstack 0
  1645   000A38                     _ldr_dark_detected:
  1646                           	callstack 28
  1647   000A38                     
  1648                           ;sensors.c: 21:     return adc_read(1) < 128;
  1649   000A38  0E01               	movlw	1
  1650   000A3A  ECD9  F004         	call	_adc_read
  1651   000A3E  5002               	movf	(?_adc_read+1)^0,w,c
  1652   000A40  E10A               	bnz	u380
  1653   000A42  0E80               	movlw	128
  1654   000A44  5C01               	subwf	?_adc_read^0,w,c
  1655   000A46  A0D8               	btfss	status,0,c
  1656   000A48  EF28  F005         	goto	u381
  1657   000A4C  EF2B  F005         	goto	u380
  1658   000A50                     u381:
  1659   000A50  0E01               	movlw	1
  1660   000A52  EF2C  F005         	goto	u390
  1661   000A56                     u380:
  1662   000A56  0E00               	movlw	0
  1663   000A58                     u390:
  1664   000A58  0012               	return		;funcret
  1665   000A5A                     __end_of_ldr_dark_detected:
  1666                           	callstack 0
  1667                           
  1668 ;; *************** function _adc_read *****************
  1669 ;; Defined at:
  1670 ;;		line 12 in file "sensors.c"
  1671 ;; Parameters:    Size  Location     Type
  1672 ;;  channel         1    wreg     unsigned char 
  1673 ;; Auto vars:     Size  Location     Type
  1674 ;;  channel         1    4[COMRAM] unsigned char 
  1675 ;; Return value:  Size  Location     Type
  1676 ;;                  2    0[COMRAM] unsigned short 
  1677 ;; Registers used:
  1678 ;;		wreg, status,2, status,0
  1679 ;; Tracked objects:
  1680 ;;		On entry : 0/0
  1681 ;;		On exit  : 0/0
  1682 ;;		Unchanged: 0/0
  1683 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1684 ;;      Params:         2       0       0       0       0       0       0
  1685 ;;      Locals:         1       0       0       0       0       0       0
  1686 ;;      Temps:          2       0       0       0       0       0       0
  1687 ;;      Totals:         5       0       0       0       0       0       0
  1688 ;;Total ram usage:        5 bytes
  1689 ;; Hardware stack levels used: 1
  1690 ;; This function calls:
  1691 ;;		Nothing
  1692 ;; This function is called by:
  1693 ;;		_ldr_dark_detected
  1694 ;;		_read_potentiometer
  1695 ;; This function uses a non-reentrant model
  1696 ;;
  1697                           
  1698                           	psect	text4
  1699   0009B2                     __ptext4:
  1700                           	callstack 0
  1701   0009B2                     _adc_read:
  1702                           	callstack 28
  1703                           
  1704                           ;incstack = 0
  1705                           ;adc_read@channel stored from wreg
  1706   0009B2  6E05               	movwf	adc_read@channel^0,c
  1707   0009B4                     
  1708                           ;sensors.c: 13:     ADCON0 = (channel << 2) | 0x01;
  1709   0009B4  4405               	rlncf	adc_read@channel^0,w,c
  1710   0009B6  46E8               	rlncf	wreg,f,c
  1711   0009B8  0BFC               	andlw	252
  1712   0009BA  0901               	iorlw	1
  1713   0009BC  6EC2               	movwf	194,c	;volatile
  1714   0009BE                     
  1715                           ;sensors.c: 14:     _delay((unsigned long)((10)*(8000000/4000000.0)));
  1716   0009BE  0E06               	movlw	6
  1717   0009C0                     u517:
  1718   0009C0  2EE8               	decfsz	wreg,f,c
  1719   0009C2  D7FE               	bra	u517
  1720   0009C4  D000               	nop2	
  1721   0009C6                     
  1722                           ;sensors.c: 15:     GO_nDONE = 1;
  1723   0009C6  82C2               	bsf	4034,1,c	;volatile
  1724   0009C8                     l152:
  1725   0009C8  B2C2               	btfsc	4034,1,c	;volatile
  1726   0009CA  EFE9  F004         	goto	u371
  1727   0009CE  EFEB  F004         	goto	u370
  1728   0009D2                     u371:
  1729   0009D2  EFE4  F004         	goto	l152
  1730   0009D6                     u370:
  1731   0009D6                     
  1732                           ;sensors.c: 17:     return ((ADRESH << 8) + ADRESL);
  1733   0009D6  50C4               	movf	196,w,c	;volatile
  1734   0009D8  6E04               	movwf	(??_adc_read+1)^0,c
  1735   0009DA  6A03               	clrf	??_adc_read^0,c
  1736   0009DC  50C3               	movf	195,w,c	;volatile
  1737   0009DE  2403               	addwf	??_adc_read^0,w,c
  1738   0009E0  6E01               	movwf	?_adc_read^0,c
  1739   0009E2  0E00               	movlw	0
  1740   0009E4  2004               	addwfc	(??_adc_read+1)^0,w,c
  1741   0009E6  6E02               	movwf	(?_adc_read+1)^0,c
  1742   0009E8  0012               	return		;funcret
  1743   0009EA                     __end_of_adc_read:
  1744                           	callstack 0
  1745                           
  1746 ;; *************** function _buzzer_play_success *****************
  1747 ;; Defined at:
  1748 ;;		line 12 in file "buzzer.c"
  1749 ;; Parameters:    Size  Location     Type
  1750 ;;		None
  1751 ;; Auto vars:     Size  Location     Type
  1752 ;;		None
  1753 ;; Return value:  Size  Location     Type
  1754 ;;                  1    wreg      void 
  1755 ;; Registers used:
  1756 ;;		wreg
  1757 ;; Tracked objects:
  1758 ;;		On entry : 0/0
  1759 ;;		On exit  : 0/0
  1760 ;;		Unchanged: 0/0
  1761 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1762 ;;      Params:         0       0       0       0       0       0       0
  1763 ;;      Locals:         0       0       0       0       0       0       0
  1764 ;;      Temps:          2       0       0       0       0       0       0
  1765 ;;      Totals:         2       0       0       0       0       0       0
  1766 ;;Total ram usage:        2 bytes
  1767 ;; Hardware stack levels used: 1
  1768 ;; This function calls:
  1769 ;;		Nothing
  1770 ;; This function is called by:
  1771 ;;		_game_loop
  1772 ;; This function uses a non-reentrant model
  1773 ;;
  1774                           
  1775                           	psect	text5
  1776   000A5A                     __ptext5:
  1777                           	callstack 0
  1778   000A5A                     _buzzer_play_success:
  1779                           	callstack 29
  1780   000A5A                     
  1781                           ;buzzer.c: 13:     LATEbits.LATE0 = 1;
  1782   000A5A  808D               	bsf	141,0,c	;volatile
  1783   000A5C                     
  1784                           ;buzzer.c: 14:     _delay((unsigned long)((100)*(8000000/4000.0)));
  1785   000A5C  0E02               	movlw	2
  1786   000A5E  6E02               	movwf	(??_buzzer_play_success+1)^0,c
  1787   000A60  0E04               	movlw	4
  1788   000A62  6E01               	movwf	??_buzzer_play_success^0,c
  1789   000A64  0EBA               	movlw	186
  1790   000A66                     u527:
  1791   000A66  2EE8               	decfsz	wreg,f,c
  1792   000A68  D7FE               	bra	u527
  1793   000A6A  2E01               	decfsz	??_buzzer_play_success^0,f,c
  1794   000A6C  D7FC               	bra	u527
  1795   000A6E  2E02               	decfsz	(??_buzzer_play_success+1)^0,f,c
  1796   000A70  D7FA               	bra	u527
  1797   000A72  D000               	nop2	
  1798   000A74                     
  1799                           ;buzzer.c: 15:     LATEbits.LATE0 = 0;
  1800   000A74  908D               	bcf	141,0,c	;volatile
  1801   000A76  0012               	return		;funcret
  1802   000A78                     __end_of_buzzer_play_success:
  1803                           	callstack 0
  1804                           
  1805 ;; *************** function _buzzer_play_error *****************
  1806 ;; Defined at:
  1807 ;;		line 18 in file "buzzer.c"
  1808 ;; Parameters:    Size  Location     Type
  1809 ;;		None
  1810 ;; Auto vars:     Size  Location     Type
  1811 ;;  i               2    2[COMRAM] int 
  1812 ;; Return value:  Size  Location     Type
  1813 ;;                  1    wreg      void 
  1814 ;; Registers used:
  1815 ;;		wreg, status,2, status,0
  1816 ;; Tracked objects:
  1817 ;;		On entry : 0/0
  1818 ;;		On exit  : 0/0
  1819 ;;		Unchanged: 0/0
  1820 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1821 ;;      Params:         0       0       0       0       0       0       0
  1822 ;;      Locals:         2       0       0       0       0       0       0
  1823 ;;      Temps:          2       0       0       0       0       0       0
  1824 ;;      Totals:         4       0       0       0       0       0       0
  1825 ;;Total ram usage:        4 bytes
  1826 ;; Hardware stack levels used: 1
  1827 ;; This function calls:
  1828 ;;		Nothing
  1829 ;; This function is called by:
  1830 ;;		_game_loop
  1831 ;; This function uses a non-reentrant model
  1832 ;;
  1833                           
  1834                           	psect	text6
  1835   0008C8                     __ptext6:
  1836                           	callstack 0
  1837   0008C8                     _buzzer_play_error:
  1838                           	callstack 29
  1839   0008C8                     
  1840                           ;buzzer.c: 19:     for (int i = 0; i < 3; i++) {
  1841   0008C8  0E00               	movlw	0
  1842   0008CA  6E04               	movwf	(buzzer_play_error@i+1)^0,c
  1843   0008CC  0E00               	movlw	0
  1844   0008CE  6E03               	movwf	buzzer_play_error@i^0,c
  1845   0008D0                     l130:
  1846                           
  1847                           ;buzzer.c: 20:         LATEbits.LATE0 = 1;
  1848   0008D0  808D               	bsf	141,0,c	;volatile
  1849   0008D2                     
  1850                           ;buzzer.c: 21:         _delay((unsigned long)((100)*(8000000/4000.0)));
  1851   0008D2  0E02               	movlw	2
  1852   0008D4  6E02               	movwf	(??_buzzer_play_error+1)^0,c
  1853   0008D6  0E04               	movlw	4
  1854   0008D8  6E01               	movwf	??_buzzer_play_error^0,c
  1855   0008DA  0EBA               	movlw	186
  1856   0008DC                     u537:
  1857   0008DC  2EE8               	decfsz	wreg,f,c
  1858   0008DE  D7FE               	bra	u537
  1859   0008E0  2E01               	decfsz	??_buzzer_play_error^0,f,c
  1860   0008E2  D7FC               	bra	u537
  1861   0008E4  2E02               	decfsz	(??_buzzer_play_error+1)^0,f,c
  1862   0008E6  D7FA               	bra	u537
  1863   0008E8  D000               	nop2	
  1864   0008EA                     
  1865                           ;buzzer.c: 22:         LATEbits.LATE0 = 0;
  1866   0008EA  908D               	bcf	141,0,c	;volatile
  1867                           
  1868                           ;buzzer.c: 23:         _delay((unsigned long)((100)*(8000000/4000.0)));
  1869   0008EC  0E02               	movlw	2
  1870   0008EE  6E02               	movwf	(??_buzzer_play_error+1)^0,c
  1871   0008F0  0E04               	movlw	4
  1872   0008F2  6E01               	movwf	??_buzzer_play_error^0,c
  1873   0008F4  0EBA               	movlw	186
  1874   0008F6                     u547:
  1875   0008F6  2EE8               	decfsz	wreg,f,c
  1876   0008F8  D7FE               	bra	u547
  1877   0008FA  2E01               	decfsz	??_buzzer_play_error^0,f,c
  1878   0008FC  D7FC               	bra	u547
  1879   0008FE  2E02               	decfsz	(??_buzzer_play_error+1)^0,f,c
  1880   000900  D7FA               	bra	u547
  1881   000902  D000               	nop2	
  1882   000904                     
  1883                           ;buzzer.c: 24:     }
  1884   000904  4A03               	infsnz	buzzer_play_error@i^0,f,c
  1885   000906  2A04               	incf	(buzzer_play_error@i+1)^0,f,c
  1886   000908  BE04               	btfsc	(buzzer_play_error@i+1)^0,7,c
  1887   00090A  EF90  F004         	goto	u191
  1888   00090E  5004               	movf	(buzzer_play_error@i+1)^0,w,c
  1889   000910  E109               	bnz	u190
  1890   000912  0E03               	movlw	3
  1891   000914  5C03               	subwf	buzzer_play_error@i^0,w,c
  1892   000916  A0D8               	btfss	status,0,c
  1893   000918  EF90  F004         	goto	u191
  1894   00091C  EF92  F004         	goto	u190
  1895   000920                     u191:
  1896   000920  EF68  F004         	goto	l130
  1897   000924                     u190:
  1898   000924  0012               	return		;funcret
  1899   000926                     __end_of_buzzer_play_error:
  1900                           	callstack 0
  1901                           
  1902 ;; *************** function _buttons_read *****************
  1903 ;; Defined at:
  1904 ;;		line 10 in file "buttons.c"
  1905 ;; Parameters:    Size  Location     Type
  1906 ;;		None
  1907 ;; Auto vars:     Size  Location     Type
  1908 ;;		None
  1909 ;; Return value:  Size  Location     Type
  1910 ;;                  1    wreg      char 
  1911 ;; Registers used:
  1912 ;;		wreg
  1913 ;; Tracked objects:
  1914 ;;		On entry : 0/0
  1915 ;;		On exit  : 0/0
  1916 ;;		Unchanged: 0/0
  1917 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1918 ;;      Params:         0       0       0       0       0       0       0
  1919 ;;      Locals:         0       0       0       0       0       0       0
  1920 ;;      Temps:          0       0       0       0       0       0       0
  1921 ;;      Totals:         0       0       0       0       0       0       0
  1922 ;;Total ram usage:        0 bytes
  1923 ;; Hardware stack levels used: 1
  1924 ;; This function calls:
  1925 ;;		Nothing
  1926 ;; This function is called by:
  1927 ;;		_game_loop
  1928 ;; This function uses a non-reentrant model
  1929 ;;
  1930                           
  1931                           	psect	text7
  1932   000926                     __ptext7:
  1933                           	callstack 0
  1934   000926                     _buttons_read:
  1935                           	callstack 29
  1936   000926                     
  1937                           ;buttons.c: 11:     if (!PORTBbits.RB0) return 0;
  1938   000926  B081               	btfsc	129,0,c	;volatile
  1939   000928  EF98  F004         	goto	u151
  1940   00092C  EF9A  F004         	goto	u150
  1941   000930                     u151:
  1942   000930  EF9D  F004         	goto	l99
  1943   000934                     u150:
  1944   000934  0E00               	movlw	0
  1945   000936  EFBC  F004         	goto	l100
  1946   00093A                     l99:
  1947                           
  1948                           ;buttons.c: 12:     if (!PORTBbits.RB1) return 1;
  1949   00093A  B281               	btfsc	129,1,c	;volatile
  1950   00093C  EFA2  F004         	goto	u161
  1951   000940  EFA4  F004         	goto	u160
  1952   000944                     u161:
  1953   000944  EFA7  F004         	goto	l101
  1954   000948                     u160:
  1955   000948  0E01               	movlw	1
  1956   00094A  EFBC  F004         	goto	l100
  1957   00094E                     l101:
  1958                           
  1959                           ;buttons.c: 13:     if (!PORTBbits.RB2) return 2;
  1960   00094E  B481               	btfsc	129,2,c	;volatile
  1961   000950  EFAC  F004         	goto	u171
  1962   000954  EFAE  F004         	goto	u170
  1963   000958                     u171:
  1964   000958  EFB1  F004         	goto	l102
  1965   00095C                     u170:
  1966   00095C  0E02               	movlw	2
  1967   00095E  EFBC  F004         	goto	l100
  1968   000962                     l102:
  1969                           
  1970                           ;buttons.c: 14:     if (!PORTBbits.RB3) return 3;
  1971   000962  B681               	btfsc	129,3,c	;volatile
  1972   000964  EFB6  F004         	goto	u181
  1973   000968  EFB8  F004         	goto	u180
  1974   00096C                     u181:
  1975   00096C  EFBB  F004         	goto	l967
  1976   000970                     u180:
  1977   000970  0E03               	movlw	3
  1978   000972  EFBC  F004         	goto	l100
  1979   000976                     l967:
  1980                           
  1981                           ;buttons.c: 15:     return -1;
  1982   000976  0EFF               	movlw	255
  1983   000978                     l100:
  1984   000978  0012               	return		;funcret
  1985   00097A                     __end_of_buttons_read:
  1986                           	callstack 0
  1987                           
  1988 ;; *************** function _game_init *****************
  1989 ;; Defined at:
  1990 ;;		line 23 in file "game.c"
  1991 ;; Parameters:    Size  Location     Type
  1992 ;;		None
  1993 ;; Auto vars:     Size  Location     Type
  1994 ;;		None
  1995 ;; Return value:  Size  Location     Type
  1996 ;;                  1    wreg      void 
  1997 ;; Registers used:
  1998 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1999 ;; Tracked objects:
  2000 ;;		On entry : 0/0
  2001 ;;		On exit  : 0/0
  2002 ;;		Unchanged: 0/0
  2003 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2004 ;;      Params:         0       0       0       0       0       0       0
  2005 ;;      Locals:         0       0       0       0       0       0       0
  2006 ;;      Temps:          0       0       0       0       0       0       0
  2007 ;;      Totals:         0       0       0       0       0       0       0
  2008 ;;Total ram usage:        0 bytes
  2009 ;; Hardware stack levels used: 1
  2010 ;; Hardware stack levels required when called: 4
  2011 ;; This function calls:
  2012 ;;		_buttons_init
  2013 ;;		_buzzer_init
  2014 ;;		_display_init
  2015 ;;		_game_reset
  2016 ;;		_leds_init
  2017 ;;		_sensors_init
  2018 ;; This function is called by:
  2019 ;;		_main
  2020 ;; This function uses a non-reentrant model
  2021 ;;
  2022                           
  2023                           	psect	text8
  2024   000A92                     __ptext8:
  2025                           	callstack 0
  2026   000A92                     _game_init:
  2027                           	callstack 26
  2028   000A92                     
  2029                           ;game.c: 24:     leds_init();
  2030   000A92  EC6B  F005         	call	_leds_init	;wreg free
  2031                           
  2032                           ;game.c: 25:     buttons_init();
  2033   000A96  EC76  F005         	call	_buttons_init	;wreg free
  2034   000A9A                     
  2035                           ;game.c: 26:     display_init();
  2036   000A9A  EC70  F005         	call	_display_init	;wreg free
  2037   000A9E                     
  2038                           ;game.c: 27:     buzzer_init();
  2039   000A9E  EC73  F005         	call	_buzzer_init	;wreg free
  2040   000AA2                     
  2041                           ;game.c: 28:     sensors_init();
  2042   000AA2  EC66  F005         	call	_sensors_init	;wreg free
  2043   000AA6                     
  2044                           ;game.c: 30:     game_reset();
  2045   000AA6  EC5E  F005         	call	_game_reset	;wreg free
  2046   000AAA  0012               	return		;funcret
  2047   000AAC                     __end_of_game_init:
  2048                           	callstack 0
  2049                           
  2050 ;; *************** function _sensors_init *****************
  2051 ;; Defined at:
  2052 ;;		line 6 in file "sensors.c"
  2053 ;; Parameters:    Size  Location     Type
  2054 ;;		None
  2055 ;; Auto vars:     Size  Location     Type
  2056 ;;		None
  2057 ;; Return value:  Size  Location     Type
  2058 ;;                  1    wreg      void 
  2059 ;; Registers used:
  2060 ;;		wreg, status,2
  2061 ;; Tracked objects:
  2062 ;;		On entry : 0/0
  2063 ;;		On exit  : 0/0
  2064 ;;		Unchanged: 0/0
  2065 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2066 ;;      Params:         0       0       0       0       0       0       0
  2067 ;;      Locals:         0       0       0       0       0       0       0
  2068 ;;      Temps:          0       0       0       0       0       0       0
  2069 ;;      Totals:         0       0       0       0       0       0       0
  2070 ;;Total ram usage:        0 bytes
  2071 ;; Hardware stack levels used: 1
  2072 ;; This function calls:
  2073 ;;		Nothing
  2074 ;; This function is called by:
  2075 ;;		_game_init
  2076 ;; This function uses a non-reentrant model
  2077 ;;
  2078                           
  2079                           	psect	text9
  2080   000ACC                     __ptext9:
  2081                           	callstack 0
  2082   000ACC                     _sensors_init:
  2083                           	callstack 29
  2084   000ACC                     
  2085                           ;sensors.c: 7:     TRISAbits.TRISA0 = 1;
  2086   000ACC  8092               	bsf	146,0,c	;volatile
  2087                           
  2088                           ;sensors.c: 8:     TRISAbits.TRISA1 = 1;
  2089   000ACE  8292               	bsf	146,1,c	;volatile
  2090   000AD0                     
  2091                           ;sensors.c: 9:     ADCON1 = 0x0E;
  2092   000AD0  0E0E               	movlw	14
  2093   000AD2  6EC1               	movwf	193,c	;volatile
  2094   000AD4  0012               	return		;funcret
  2095   000AD6                     __end_of_sensors_init:
  2096                           	callstack 0
  2097                           
  2098 ;; *************** function _leds_init *****************
  2099 ;; Defined at:
  2100 ;;		line 6 in file "leds.c"
  2101 ;; Parameters:    Size  Location     Type
  2102 ;;		None
  2103 ;; Auto vars:     Size  Location     Type
  2104 ;;		None
  2105 ;; Return value:  Size  Location     Type
  2106 ;;                  1    wreg      void 
  2107 ;; Registers used:
  2108 ;;		wreg, status,2, status,0
  2109 ;; Tracked objects:
  2110 ;;		On entry : 0/0
  2111 ;;		On exit  : 0/0
  2112 ;;		Unchanged: 0/0
  2113 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2114 ;;      Params:         0       0       0       0       0       0       0
  2115 ;;      Locals:         0       0       0       0       0       0       0
  2116 ;;      Temps:          0       0       0       0       0       0       0
  2117 ;;      Totals:         0       0       0       0       0       0       0
  2118 ;;Total ram usage:        0 bytes
  2119 ;; Hardware stack levels used: 1
  2120 ;; This function calls:
  2121 ;;		Nothing
  2122 ;; This function is called by:
  2123 ;;		_game_init
  2124 ;; This function uses a non-reentrant model
  2125 ;;
  2126                           
  2127                           	psect	text10
  2128   000AD6                     __ptext10:
  2129                           	callstack 0
  2130   000AD6                     _leds_init:
  2131                           	callstack 29
  2132   000AD6                     
  2133                           ;leds.c: 7:     TRISD &= 0xF0;
  2134   000AD6  0EF0               	movlw	240
  2135   000AD8  1695               	andwf	149,f,c	;volatile
  2136                           
  2137                           ;leds.c: 8:     LATD &= 0xF0;
  2138   000ADA  0EF0               	movlw	240
  2139   000ADC  168C               	andwf	140,f,c	;volatile
  2140   000ADE  0012               	return		;funcret
  2141   000AE0                     __end_of_leds_init:
  2142                           	callstack 0
  2143                           
  2144 ;; *************** function _game_reset *****************
  2145 ;; Defined at:
  2146 ;;		line 33 in file "game.c"
  2147 ;; Parameters:    Size  Location     Type
  2148 ;;		None
  2149 ;; Auto vars:     Size  Location     Type
  2150 ;;		None
  2151 ;; Return value:  Size  Location     Type
  2152 ;;                  1    wreg      void 
  2153 ;; Registers used:
  2154 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2155 ;; Tracked objects:
  2156 ;;		On entry : 0/0
  2157 ;;		On exit  : 0/0
  2158 ;;		Unchanged: 0/0
  2159 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2160 ;;      Params:         0       0       0       0       0       0       0
  2161 ;;      Locals:         0       0       0       0       0       0       0
  2162 ;;      Temps:          0       0       0       0       0       0       0
  2163 ;;      Totals:         0       0       0       0       0       0       0
  2164 ;;Total ram usage:        0 bytes
  2165 ;; Hardware stack levels used: 1
  2166 ;; Hardware stack levels required when called: 3
  2167 ;; This function calls:
  2168 ;;		_display_show_digit
  2169 ;;		_generate_sequence
  2170 ;; This function is called by:
  2171 ;;		_game_init
  2172 ;;		_game_loop
  2173 ;; This function uses a non-reentrant model
  2174 ;;
  2175                           
  2176                           	psect	text11
  2177   000ABC                     __ptext11:
  2178                           	callstack 0
  2179   000ABC                     _game_reset:
  2180                           	callstack 26
  2181   000ABC                     
  2182                           ;game.c: 34:     current_level = 1;
  2183   000ABC  0E01               	movlw	1
  2184   000ABE  6E28               	movwf	_current_level^0,c
  2185   000AC0                     
  2186                           ;game.c: 35:     display_show_digit(0);
  2187   000AC0  0E00               	movlw	0
  2188   000AC2  EC09  F005         	call	_display_show_digit
  2189   000AC6                     
  2190                           ;game.c: 36:     generate_sequence();
  2191   000AC6  ECF5  F004         	call	_generate_sequence	;wreg free
  2192   000ACA  0012               	return		;funcret
  2193   000ACC                     __end_of_game_reset:
  2194                           	callstack 0
  2195                           
  2196 ;; *************** function _generate_sequence *****************
  2197 ;; Defined at:
  2198 ;;		line 17 in file "game.c"
  2199 ;; Parameters:    Size  Location     Type
  2200 ;;		None
  2201 ;; Auto vars:     Size  Location     Type
  2202 ;;  i               1   18[COMRAM] unsigned char 
  2203 ;; Return value:  Size  Location     Type
  2204 ;;                  1    wreg      void 
  2205 ;; Registers used:
  2206 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2207 ;; Tracked objects:
  2208 ;;		On entry : 0/0
  2209 ;;		On exit  : 0/0
  2210 ;;		Unchanged: 0/0
  2211 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2212 ;;      Params:         0       0       0       0       0       0       0
  2213 ;;      Locals:         1       0       0       0       0       0       0
  2214 ;;      Temps:          0       0       0       0       0       0       0
  2215 ;;      Totals:         1       0       0       0       0       0       0
  2216 ;;Total ram usage:        1 bytes
  2217 ;; Hardware stack levels used: 1
  2218 ;; Hardware stack levels required when called: 2
  2219 ;; This function calls:
  2220 ;;		_rand
  2221 ;; This function is called by:
  2222 ;;		_game_reset
  2223 ;; This function uses a non-reentrant model
  2224 ;;
  2225                           
  2226                           	psect	text12
  2227   0009EA                     __ptext12:
  2228                           	callstack 0
  2229   0009EA                     _generate_sequence:
  2230                           	callstack 26
  2231   0009EA                     
  2232                           ;game.c: 18:     for (uint8_t i = 0; i < 9; i++) {
  2233   0009EA  6A13               	clrf	generate_sequence@i^0,c
  2234   0009EC                     l1121:
  2235                           
  2236                           ;game.c: 19:         sequence[i] = rand() % 4;
  2237   0009EC  5013               	movf	generate_sequence@i^0,w,c
  2238   0009EE  0F1B               	addlw	low _sequence
  2239   0009F0  6ED9               	movwf	fsr2l,c
  2240   0009F2  6ADA               	clrf	fsr2h,c
  2241   0009F4  ECF9  F003         	call	_rand	;wreg free
  2242   0009F8  500D               	movf	?_rand^0,w,c
  2243   0009FA  0B03               	andlw	3
  2244   0009FC  6EDF               	movwf	indf2,c
  2245   0009FE                     
  2246                           ;game.c: 20:     }
  2247   0009FE  2A13               	incf	generate_sequence@i^0,f,c
  2248   000A00  0E08               	movlw	8
  2249   000A02  6413               	cpfsgt	generate_sequence@i^0,c
  2250   000A04  EF06  F005         	goto	u361
  2251   000A08  EF08  F005         	goto	u360
  2252   000A0C                     u361:
  2253   000A0C  EFF6  F004         	goto	l1121
  2254   000A10                     u360:
  2255   000A10  0012               	return		;funcret
  2256   000A12                     __end_of_generate_sequence:
  2257                           	callstack 0
  2258                           
  2259 ;; *************** function _rand *****************
  2260 ;; Defined at:
  2261 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\rand.c"
  2262 ;; Parameters:    Size  Location     Type
  2263 ;;		None
  2264 ;; Auto vars:     Size  Location     Type
  2265 ;;		None
  2266 ;; Return value:  Size  Location     Type
  2267 ;;                  2   12[COMRAM] int 
  2268 ;; Registers used:
  2269 ;;		wreg, status,2, status,0, cstack
  2270 ;; Tracked objects:
  2271 ;;		On entry : 0/0
  2272 ;;		On exit  : 0/0
  2273 ;;		Unchanged: 0/0
  2274 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2275 ;;      Params:         2       0       0       0       0       0       0
  2276 ;;      Locals:         0       0       0       0       0       0       0
  2277 ;;      Temps:          4       0       0       0       0       0       0
  2278 ;;      Totals:         6       0       0       0       0       0       0
  2279 ;;Total ram usage:        6 bytes
  2280 ;; Hardware stack levels used: 1
  2281 ;; Hardware stack levels required when called: 1
  2282 ;; This function calls:
  2283 ;;		___lmul
  2284 ;; This function is called by:
  2285 ;;		_generate_sequence
  2286 ;; This function uses a non-reentrant model
  2287 ;;
  2288                           
  2289                           	psect	text13
  2290   0007F2                     __ptext13:
  2291                           	callstack 0
  2292   0007F2                     _rand:
  2293                           	callstack 26
  2294   0007F2  C024  F001         	movff	_seed,___lmul@multiplier
  2295   0007F6  C025  F002         	movff	_seed+1,___lmul@multiplier+1
  2296   0007FA  C026  F003         	movff	_seed+2,___lmul@multiplier+2
  2297   0007FE  C027  F004         	movff	_seed+3,___lmul@multiplier+3
  2298   000802  0E2D               	movlw	45
  2299   000804  6E05               	movwf	___lmul@multiplicand^0,c
  2300   000806  0E7F               	movlw	127
  2301   000808  6E06               	movwf	(___lmul@multiplicand+1)^0,c
  2302   00080A  0E95               	movlw	149
  2303   00080C  6E07               	movwf	(___lmul@multiplicand+2)^0,c
  2304   00080E  0E4C               	movlw	76
  2305   000810  6E08               	movwf	(___lmul@multiplicand+3)^0,c
  2306   000812  EC2F  F004         	call	___lmul	;wreg free
  2307   000816  0E01               	movlw	1
  2308   000818  2401               	addwf	?___lmul^0,w,c
  2309   00081A  6E24               	movwf	_seed^0,c
  2310   00081C  0E00               	movlw	0
  2311   00081E  2002               	addwfc	(?___lmul+1)^0,w,c
  2312   000820  6E25               	movwf	(_seed+1)^0,c
  2313   000822  0E00               	movlw	0
  2314   000824  2003               	addwfc	(?___lmul+2)^0,w,c
  2315   000826  6E26               	movwf	(_seed+2)^0,c
  2316   000828  0E00               	movlw	0
  2317   00082A  2004               	addwfc	(?___lmul+3)^0,w,c
  2318   00082C  6E27               	movwf	(_seed+3)^0,c
  2319   00082E  C024  F00F         	movff	_seed,??_rand
  2320   000832  C025  F010         	movff	_seed+1,??_rand+1
  2321   000836  C026  F011         	movff	_seed+2,??_rand+2
  2322   00083A  C027  F012         	movff	_seed+3,??_rand+3
  2323   00083E  0E12               	movlw	18
  2324   000840  EF27  F004         	goto	u290
  2325   000844                     u295:
  2326   000844  90D8               	bcf	status,0,c
  2327   000846  3212               	rrcf	(??_rand+3)^0,f,c
  2328   000848  3211               	rrcf	(??_rand+2)^0,f,c
  2329   00084A  3210               	rrcf	(??_rand+1)^0,f,c
  2330   00084C  320F               	rrcf	??_rand^0,f,c
  2331   00084E                     u290:
  2332   00084E  2EE8               	decfsz	wreg,f,c
  2333   000850  EF22  F004         	goto	u295
  2334   000854  C00F  F00D         	movff	??_rand,?_rand
  2335   000858  C010  F00E         	movff	??_rand+1,?_rand+1
  2336   00085C  0012               	return		;funcret
  2337   00085E                     __end_of_rand:
  2338                           	callstack 0
  2339                           
  2340 ;; *************** function ___lmul *****************
  2341 ;; Defined at:
  2342 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\Umul32.c"
  2343 ;; Parameters:    Size  Location     Type
  2344 ;;  multiplier      4    0[COMRAM] unsigned long 
  2345 ;;  multiplicand    4    4[COMRAM] unsigned long 
  2346 ;; Auto vars:     Size  Location     Type
  2347 ;;  product         4    8[COMRAM] unsigned long 
  2348 ;; Return value:  Size  Location     Type
  2349 ;;                  4    0[COMRAM] unsigned long 
  2350 ;; Registers used:
  2351 ;;		wreg, status,2, status,0
  2352 ;; Tracked objects:
  2353 ;;		On entry : 0/0
  2354 ;;		On exit  : 0/0
  2355 ;;		Unchanged: 0/0
  2356 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2357 ;;      Params:         8       0       0       0       0       0       0
  2358 ;;      Locals:         4       0       0       0       0       0       0
  2359 ;;      Temps:          0       0       0       0       0       0       0
  2360 ;;      Totals:        12       0       0       0       0       0       0
  2361 ;;Total ram usage:       12 bytes
  2362 ;; Hardware stack levels used: 1
  2363 ;; This function calls:
  2364 ;;		Nothing
  2365 ;; This function is called by:
  2366 ;;		_rand
  2367 ;; This function uses a non-reentrant model
  2368 ;;
  2369                           
  2370                           	psect	text14
  2371   00085E                     __ptext14:
  2372                           	callstack 0
  2373   00085E                     ___lmul:
  2374                           	callstack 26
  2375   00085E  0E00               	movlw	0
  2376   000860  6E09               	movwf	___lmul@product^0,c
  2377   000862  0E00               	movlw	0
  2378   000864  6E0A               	movwf	(___lmul@product+1)^0,c
  2379   000866  0E00               	movlw	0
  2380   000868  6E0B               	movwf	(___lmul@product+2)^0,c
  2381   00086A  0E00               	movlw	0
  2382   00086C  6E0C               	movwf	(___lmul@product+3)^0,c
  2383   00086E                     l1065:
  2384   00086E  A001               	btfss	___lmul@multiplier^0,0,c
  2385   000870  EF3C  F004         	goto	u271
  2386   000874  EF3E  F004         	goto	u270
  2387   000878                     u271:
  2388   000878  EF46  F004         	goto	l1069
  2389   00087C                     u270:
  2390   00087C  5005               	movf	___lmul@multiplicand^0,w,c
  2391   00087E  2609               	addwf	___lmul@product^0,f,c
  2392   000880  5006               	movf	(___lmul@multiplicand+1)^0,w,c
  2393   000882  220A               	addwfc	(___lmul@product+1)^0,f,c
  2394   000884  5007               	movf	(___lmul@multiplicand+2)^0,w,c
  2395   000886  220B               	addwfc	(___lmul@product+2)^0,f,c
  2396   000888  5008               	movf	(___lmul@multiplicand+3)^0,w,c
  2397   00088A  220C               	addwfc	(___lmul@product+3)^0,f,c
  2398   00088C                     l1069:
  2399   00088C  90D8               	bcf	status,0,c
  2400   00088E  3605               	rlcf	___lmul@multiplicand^0,f,c
  2401   000890  3606               	rlcf	(___lmul@multiplicand+1)^0,f,c
  2402   000892  3607               	rlcf	(___lmul@multiplicand+2)^0,f,c
  2403   000894  3608               	rlcf	(___lmul@multiplicand+3)^0,f,c
  2404   000896  90D8               	bcf	status,0,c
  2405   000898  3204               	rrcf	(___lmul@multiplier+3)^0,f,c
  2406   00089A  3203               	rrcf	(___lmul@multiplier+2)^0,f,c
  2407   00089C  3202               	rrcf	(___lmul@multiplier+1)^0,f,c
  2408   00089E  3201               	rrcf	___lmul@multiplier^0,f,c
  2409   0008A0  5001               	movf	___lmul@multiplier^0,w,c
  2410   0008A2  1002               	iorwf	(___lmul@multiplier+1)^0,w,c
  2411   0008A4  1003               	iorwf	(___lmul@multiplier+2)^0,w,c
  2412   0008A6  1004               	iorwf	(___lmul@multiplier+3)^0,w,c
  2413   0008A8  A4D8               	btfss	status,2,c
  2414   0008AA  EF59  F004         	goto	u281
  2415   0008AE  EF5B  F004         	goto	u280
  2416   0008B2                     u281:
  2417   0008B2  EF37  F004         	goto	l1065
  2418   0008B6                     u280:
  2419   0008B6  C009  F001         	movff	___lmul@product,?___lmul
  2420   0008BA  C00A  F002         	movff	___lmul@product+1,?___lmul+1
  2421   0008BE  C00B  F003         	movff	___lmul@product+2,?___lmul+2
  2422   0008C2  C00C  F004         	movff	___lmul@product+3,?___lmul+3
  2423   0008C6  0012               	return		;funcret
  2424   0008C8                     __end_of___lmul:
  2425                           	callstack 0
  2426                           
  2427 ;; *************** function _display_show_digit *****************
  2428 ;; Defined at:
  2429 ;;		line 17 in file "display.c"
  2430 ;; Parameters:    Size  Location     Type
  2431 ;;  digit           1    wreg     unsigned char 
  2432 ;; Auto vars:     Size  Location     Type
  2433 ;;  digit           1    7[COMRAM] unsigned char 
  2434 ;; Return value:  Size  Location     Type
  2435 ;;                  1    wreg      void 
  2436 ;; Registers used:
  2437 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2438 ;; Tracked objects:
  2439 ;;		On entry : 0/0
  2440 ;;		On exit  : 0/0
  2441 ;;		Unchanged: 0/0
  2442 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2443 ;;      Params:         0       0       0       0       0       0       0
  2444 ;;      Locals:         1       0       0       0       0       0       0
  2445 ;;      Temps:          1       0       0       0       0       0       0
  2446 ;;      Totals:         2       0       0       0       0       0       0
  2447 ;;Total ram usage:        2 bytes
  2448 ;; Hardware stack levels used: 1
  2449 ;; Hardware stack levels required when called: 1
  2450 ;; This function calls:
  2451 ;;		___awmod
  2452 ;; This function is called by:
  2453 ;;		_game_reset
  2454 ;;		_game_loop
  2455 ;; This function uses a non-reentrant model
  2456 ;;
  2457                           
  2458                           	psect	text15
  2459   000A12                     __ptext15:
  2460                           	callstack 0
  2461   000A12                     _display_show_digit:
  2462                           	callstack 27
  2463                           
  2464                           ;incstack = 0
  2465                           ;display_show_digit@digit stored from wreg
  2466   000A12  6E08               	movwf	display_show_digit@digit^0,c
  2467   000A14                     
  2468                           ;display.c: 18:     LATC = digit_map[digit % 10];
  2469   000A14  C008  F001         	movff	display_show_digit@digit,___awmod@dividend
  2470   000A18  6A02               	clrf	(___awmod@dividend+1)^0,c
  2471   000A1A  0E00               	movlw	0
  2472   000A1C  6E04               	movwf	(___awmod@divisor+1)^0,c
  2473   000A1E  0E0A               	movlw	10
  2474   000A20  6E03               	movwf	___awmod@divisor^0,c
  2475   000A22  ECA2  F003         	call	___awmod	;wreg free
  2476   000A26  5001               	movf	?___awmod^0,w,c
  2477   000A28  0F01               	addlw	low _digit_map
  2478   000A2A  6E07               	movwf	??_display_show_digit^0,c
  2479   000A2C  C007  FFF6         	movff	??_display_show_digit,tblptrl
  2480   000A30                     	if	0	;There is only one active tblptr byte
  2481   000A30                     	endif
  2482   000A30                     	if	0	;tblptru may be non-zero
  2483   000A30                     	endif
  2484   000A30                     	if	0	;tblptru may be non-zero
  2485   000A30                     	endif
  2486   000A30  0008               	tblrd		*
  2487   000A32  CFF5 FF8B          	movff	tablat,3979	;volatile
  2488   000A36  0012               	return		;funcret
  2489   000A38                     __end_of_display_show_digit:
  2490                           	callstack 0
  2491                           
  2492 ;; *************** function ___awmod *****************
  2493 ;; Defined at:
  2494 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\awmod.c"
  2495 ;; Parameters:    Size  Location     Type
  2496 ;;  dividend        2    0[COMRAM] int 
  2497 ;;  divisor         2    2[COMRAM] int 
  2498 ;; Auto vars:     Size  Location     Type
  2499 ;;  sign            1    5[COMRAM] unsigned char 
  2500 ;;  counter         1    4[COMRAM] unsigned char 
  2501 ;; Return value:  Size  Location     Type
  2502 ;;                  2    0[COMRAM] int 
  2503 ;; Registers used:
  2504 ;;		wreg, status,2, status,0
  2505 ;; Tracked objects:
  2506 ;;		On entry : 0/0
  2507 ;;		On exit  : 0/0
  2508 ;;		Unchanged: 0/0
  2509 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2510 ;;      Params:         4       0       0       0       0       0       0
  2511 ;;      Locals:         2       0       0       0       0       0       0
  2512 ;;      Temps:          0       0       0       0       0       0       0
  2513 ;;      Totals:         6       0       0       0       0       0       0
  2514 ;;Total ram usage:        6 bytes
  2515 ;; Hardware stack levels used: 1
  2516 ;; This function calls:
  2517 ;;		Nothing
  2518 ;; This function is called by:
  2519 ;;		_display_show_digit
  2520 ;; This function uses a non-reentrant model
  2521 ;;
  2522                           
  2523                           	psect	text16
  2524   000744                     __ptext16:
  2525                           	callstack 0
  2526   000744                     ___awmod:
  2527                           	callstack 27
  2528   000744  6A06               	clrf	___awmod@sign^0,c
  2529   000746  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
  2530   000748  EFAA  F003         	goto	u300
  2531   00074C  EFA8  F003         	goto	u301
  2532   000750                     u301:
  2533   000750  EFB0  F003         	goto	l1087
  2534   000754                     u300:
  2535   000754  6C01               	negf	___awmod@dividend^0,c
  2536   000756  1E02               	comf	(___awmod@dividend+1)^0,f,c
  2537   000758  B0D8               	btfsc	status,0,c
  2538   00075A  2A02               	incf	(___awmod@dividend+1)^0,f,c
  2539   00075C  0E01               	movlw	1
  2540   00075E  6E06               	movwf	___awmod@sign^0,c
  2541   000760                     l1087:
  2542   000760  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
  2543   000762  EFB7  F003         	goto	u310
  2544   000766  EFB5  F003         	goto	u311
  2545   00076A                     u311:
  2546   00076A  EFBB  F003         	goto	l1091
  2547   00076E                     u310:
  2548   00076E  6C03               	negf	___awmod@divisor^0,c
  2549   000770  1E04               	comf	(___awmod@divisor+1)^0,f,c
  2550   000772  B0D8               	btfsc	status,0,c
  2551   000774  2A04               	incf	(___awmod@divisor+1)^0,f,c
  2552   000776                     l1091:
  2553   000776  5003               	movf	___awmod@divisor^0,w,c
  2554   000778  1004               	iorwf	(___awmod@divisor+1)^0,w,c
  2555   00077A  B4D8               	btfsc	status,2,c
  2556   00077C  EFC2  F003         	goto	u321
  2557   000780  EFC4  F003         	goto	u320
  2558   000784                     u321:
  2559   000784  EFE8  F003         	goto	l1107
  2560   000788                     u320:
  2561   000788  0E01               	movlw	1
  2562   00078A  6E05               	movwf	___awmod@counter^0,c
  2563   00078C  EFCC  F003         	goto	l1097
  2564   000790                     l1095:
  2565   000790  90D8               	bcf	status,0,c
  2566   000792  3603               	rlcf	___awmod@divisor^0,f,c
  2567   000794  3604               	rlcf	(___awmod@divisor+1)^0,f,c
  2568   000796  2A05               	incf	___awmod@counter^0,f,c
  2569   000798                     l1097:
  2570   000798  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  2571   00079A  EFD1  F003         	goto	u331
  2572   00079E  EFD3  F003         	goto	u330
  2573   0007A2                     u331:
  2574   0007A2  EFC8  F003         	goto	l1095
  2575   0007A6                     u330:
  2576   0007A6                     l1099:
  2577   0007A6  5003               	movf	___awmod@divisor^0,w,c
  2578   0007A8  5C01               	subwf	___awmod@dividend^0,w,c
  2579   0007AA  5004               	movf	(___awmod@divisor+1)^0,w,c
  2580   0007AC  5802               	subwfb	(___awmod@dividend+1)^0,w,c
  2581   0007AE  A0D8               	btfss	status,0,c
  2582   0007B0  EFDC  F003         	goto	u341
  2583   0007B4  EFDE  F003         	goto	u340
  2584   0007B8                     u341:
  2585   0007B8  EFE2  F003         	goto	l1103
  2586   0007BC                     u340:
  2587   0007BC  5003               	movf	___awmod@divisor^0,w,c
  2588   0007BE  5E01               	subwf	___awmod@dividend^0,f,c
  2589   0007C0  5004               	movf	(___awmod@divisor+1)^0,w,c
  2590   0007C2  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
  2591   0007C4                     l1103:
  2592   0007C4  90D8               	bcf	status,0,c
  2593   0007C6  3204               	rrcf	(___awmod@divisor+1)^0,f,c
  2594   0007C8  3203               	rrcf	___awmod@divisor^0,f,c
  2595   0007CA  2E05               	decfsz	___awmod@counter^0,f,c
  2596   0007CC  EFD3  F003         	goto	l1099
  2597   0007D0                     l1107:
  2598   0007D0  5006               	movf	___awmod@sign^0,w,c
  2599   0007D2  B4D8               	btfsc	status,2,c
  2600   0007D4  EFEE  F003         	goto	u351
  2601   0007D8  EFF0  F003         	goto	u350
  2602   0007DC                     u351:
  2603   0007DC  EFF4  F003         	goto	l1111
  2604   0007E0                     u350:
  2605   0007E0  6C01               	negf	___awmod@dividend^0,c
  2606   0007E2  1E02               	comf	(___awmod@dividend+1)^0,f,c
  2607   0007E4  B0D8               	btfsc	status,0,c
  2608   0007E6  2A02               	incf	(___awmod@dividend+1)^0,f,c
  2609   0007E8                     l1111:
  2610   0007E8  C001  F001         	movff	___awmod@dividend,?___awmod
  2611   0007EC  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  2612   0007F0  0012               	return		;funcret
  2613   0007F2                     __end_of___awmod:
  2614                           	callstack 0
  2615                           
  2616 ;; *************** function _display_init *****************
  2617 ;; Defined at:
  2618 ;;		line 12 in file "display.c"
  2619 ;; Parameters:    Size  Location     Type
  2620 ;;		None
  2621 ;; Auto vars:     Size  Location     Type
  2622 ;;		None
  2623 ;; Return value:  Size  Location     Type
  2624 ;;                  1    wreg      void 
  2625 ;; Registers used:
  2626 ;;		None
  2627 ;; Tracked objects:
  2628 ;;		On entry : 0/0
  2629 ;;		On exit  : 0/0
  2630 ;;		Unchanged: 0/0
  2631 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2632 ;;      Params:         0       0       0       0       0       0       0
  2633 ;;      Locals:         0       0       0       0       0       0       0
  2634 ;;      Temps:          0       0       0       0       0       0       0
  2635 ;;      Totals:         0       0       0       0       0       0       0
  2636 ;;Total ram usage:        0 bytes
  2637 ;; Hardware stack levels used: 1
  2638 ;; This function calls:
  2639 ;;		Nothing
  2640 ;; This function is called by:
  2641 ;;		_game_init
  2642 ;; This function uses a non-reentrant model
  2643 ;;
  2644                           
  2645                           	psect	text17
  2646   000AE0                     __ptext17:
  2647                           	callstack 0
  2648   000AE0                     _display_init:
  2649                           	callstack 29
  2650   000AE0                     
  2651                           ;display.c: 13:     TRISC = 0x00;
  2652   000AE0  6A94               	clrf	148,c	;volatile
  2653                           
  2654                           ;display.c: 14:     LATC = 0x00;
  2655   000AE2  6A8B               	clrf	139,c	;volatile
  2656   000AE4  0012               	return		;funcret
  2657   000AE6                     __end_of_display_init:
  2658                           	callstack 0
  2659                           
  2660 ;; *************** function _buzzer_init *****************
  2661 ;; Defined at:
  2662 ;;		line 7 in file "buzzer.c"
  2663 ;; Parameters:    Size  Location     Type
  2664 ;;		None
  2665 ;; Auto vars:     Size  Location     Type
  2666 ;;		None
  2667 ;; Return value:  Size  Location     Type
  2668 ;;                  1    wreg      void 
  2669 ;; Registers used:
  2670 ;;		None
  2671 ;; Tracked objects:
  2672 ;;		On entry : 0/0
  2673 ;;		On exit  : 0/0
  2674 ;;		Unchanged: 0/0
  2675 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2676 ;;      Params:         0       0       0       0       0       0       0
  2677 ;;      Locals:         0       0       0       0       0       0       0
  2678 ;;      Temps:          0       0       0       0       0       0       0
  2679 ;;      Totals:         0       0       0       0       0       0       0
  2680 ;;Total ram usage:        0 bytes
  2681 ;; Hardware stack levels used: 1
  2682 ;; This function calls:
  2683 ;;		Nothing
  2684 ;; This function is called by:
  2685 ;;		_game_init
  2686 ;; This function uses a non-reentrant model
  2687 ;;
  2688                           
  2689                           	psect	text18
  2690   000AE6                     __ptext18:
  2691                           	callstack 0
  2692   000AE6                     _buzzer_init:
  2693                           	callstack 29
  2694   000AE6                     
  2695                           ;buzzer.c: 8:     TRISEbits.TRISE0 = 0;
  2696   000AE6  9096               	bcf	150,0,c	;volatile
  2697                           
  2698                           ;buzzer.c: 9:     LATEbits.LATE0 = 0;
  2699   000AE8  908D               	bcf	141,0,c	;volatile
  2700   000AEA  0012               	return		;funcret
  2701   000AEC                     __end_of_buzzer_init:
  2702                           	callstack 0
  2703                           
  2704 ;; *************** function _buttons_init *****************
  2705 ;; Defined at:
  2706 ;;		line 6 in file "buttons.c"
  2707 ;; Parameters:    Size  Location     Type
  2708 ;;		None
  2709 ;; Auto vars:     Size  Location     Type
  2710 ;;		None
  2711 ;; Return value:  Size  Location     Type
  2712 ;;                  1    wreg      void 
  2713 ;; Registers used:
  2714 ;;		wreg, status,2, status,0
  2715 ;; Tracked objects:
  2716 ;;		On entry : 0/0
  2717 ;;		On exit  : 0/0
  2718 ;;		Unchanged: 0/0
  2719 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2720 ;;      Params:         0       0       0       0       0       0       0
  2721 ;;      Locals:         0       0       0       0       0       0       0
  2722 ;;      Temps:          0       0       0       0       0       0       0
  2723 ;;      Totals:         0       0       0       0       0       0       0
  2724 ;;Total ram usage:        0 bytes
  2725 ;; Hardware stack levels used: 1
  2726 ;; This function calls:
  2727 ;;		Nothing
  2728 ;; This function is called by:
  2729 ;;		_game_init
  2730 ;; This function uses a non-reentrant model
  2731 ;;
  2732                           
  2733                           	psect	text19
  2734   000AEC                     __ptext19:
  2735                           	callstack 0
  2736   000AEC                     _buttons_init:
  2737                           	callstack 29
  2738   000AEC                     
  2739                           ;buttons.c: 7:     TRISB |= 0x0F;
  2740   000AEC  0E0F               	movlw	15
  2741   000AEE  1293               	iorwf	147,f,c	;volatile
  2742   000AF0  0012               	return		;funcret
  2743   000AF2                     __end_of_buttons_init:
  2744                           	callstack 0
  2745                           
  2746                           	psect	rparam
  2747   000001                     ___rparam_used  equ	1
  2748   000000                     ___param_bank   equ	0
  2749   000000                     __Lparam        equ	__Lrparam
  2750   000000                     __Hparam        equ	__Hrparam
  2751                           
  2752                           	psect	config
  2753                           
  2754                           ; Padding undefined space
  2755   300000                     	org	3145728
  2756   300000  FF                 	db	255
  2757                           
  2758                           ;Config register CONFIG1H @ 0x300001
  2759                           ;	Oscillator Selection bits
  2760                           ;	OSC = HS, HS oscillator
  2761                           ;	Fail-Safe Clock Monitor Enable bit
  2762                           ;	FCMEN = 0x0, unprogrammed default
  2763                           ;	Internal/External Oscillator Switchover bit
  2764                           ;	IESO = 0x0, unprogrammed default
  2765   300001                     	org	3145729
  2766   300001  02                 	db	2
  2767                           
  2768                           ;Config register CONFIG2L @ 0x300002
  2769                           ;	Power-up Timer Enable bit
  2770                           ;	PWRT = 0x1, unprogrammed default
  2771                           ;	Brown-out Reset Enable bits
  2772                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
  2773                           ;	Brown Out Reset Voltage bits
  2774                           ;	BORV = 0x3, unprogrammed default
  2775   300002                     	org	3145730
  2776   300002  19                 	db	25
  2777                           
  2778                           ;Config register CONFIG2H @ 0x300003
  2779                           ;	Watchdog Timer Enable bit
  2780                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  2781                           ;	Watchdog Timer Postscale Select bits
  2782                           ;	WDTPS = 0xF, unprogrammed default
  2783   300003                     	org	3145731
  2784   300003  1E                 	db	30
  2785                           
  2786                           ; Padding undefined space
  2787   300004                     	org	3145732
  2788   300004  FF                 	db	255
  2789                           
  2790                           ;Config register CONFIG3H @ 0x300005
  2791                           ;	CCP2 MUX bit
  2792                           ;	CCP2MX = 0x1, unprogrammed default
  2793                           ;	PORTB A/D Enable bit
  2794                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  2795                           ;	Low-Power Timer1 Oscillator Enable bit
  2796                           ;	LPT1OSC = 0x0, unprogrammed default
  2797                           ;	MCLR Pin Enable bit
  2798                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  2799   300005                     	org	3145733
  2800   300005  81                 	db	129
  2801                           
  2802                           ;Config register CONFIG4L @ 0x300006
  2803                           ;	Stack Full/Underflow Reset Enable bit
  2804                           ;	STVREN = 0x1, unprogrammed default
  2805                           ;	Single-Supply ICSP Enable bit
  2806                           ;	LVP = OFF, Single-Supply ICSP disabled
  2807                           ;	Extended Instruction Set Enable bit
  2808                           ;	XINST = 0x0, unprogrammed default
  2809                           ;	Background Debugger Enable bit
  2810                           ;	DEBUG = 0x1, unprogrammed default
  2811   300006                     	org	3145734
  2812   300006  81                 	db	129
  2813                           
  2814                           ; Padding undefined space
  2815   300007                     	org	3145735
  2816   300007  FF                 	db	255
  2817                           tosu	equ	0xFFF
  2818                           tosh	equ	0xFFE
  2819                           tosl	equ	0xFFD
  2820                           stkptr	equ	0xFFC
  2821                           pclatu	equ	0xFFB
  2822                           pclath	equ	0xFFA
  2823                           pcl	equ	0xFF9
  2824                           tblptru	equ	0xFF8
  2825                           tblptrh	equ	0xFF7
  2826                           tblptrl	equ	0xFF6
  2827                           tablat	equ	0xFF5
  2828                           prodh	equ	0xFF4
  2829                           prodl	equ	0xFF3
  2830                           indf0	equ	0xFEF
  2831                           postinc0	equ	0xFEE
  2832                           postdec0	equ	0xFED
  2833                           preinc0	equ	0xFEC
  2834                           plusw0	equ	0xFEB
  2835                           fsr0h	equ	0xFEA
  2836                           fsr0l	equ	0xFE9
  2837                           wreg	equ	0xFE8
  2838                           indf1	equ	0xFE7
  2839                           postinc1	equ	0xFE6
  2840                           postdec1	equ	0xFE5
  2841                           preinc1	equ	0xFE4
  2842                           plusw1	equ	0xFE3
  2843                           fsr1h	equ	0xFE2
  2844                           fsr1l	equ	0xFE1
  2845                           bsr	equ	0xFE0
  2846                           indf2	equ	0xFDF
  2847                           postinc2	equ	0xFDE
  2848                           postdec2	equ	0xFDD
  2849                           preinc2	equ	0xFDC
  2850                           plusw2	equ	0xFDB
  2851                           fsr2h	equ	0xFDA
  2852                           fsr2l	equ	0xFD9
  2853                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    10
    Data        0
    BSS         13
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     26      40
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_game_loop
    _ldr_dark_detected->_adc_read
    _game_reset->_generate_sequence
    _generate_sequence->_rand
    _rand->___lmul
    _display_show_digit->___awmod

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    1539
                          _game_init
                          _game_loop
 ---------------------------------------------------------------------------------
 (1) _game_loop                                            7     7      0    1050
                                             19 COMRAM     7     7      0
                       _buttons_read
                  _buzzer_play_error
                _buzzer_play_success
                 _display_show_digit
                         _game_reset
                  _ldr_dark_detected
                         _leds_flash
 ---------------------------------------------------------------------------------
 (2) _leds_flash                                           3     3      0      15
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) _ldr_dark_detected                                    0     0      0      29
                           _adc_read
 ---------------------------------------------------------------------------------
 (3) _adc_read                                             5     3      2      29
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (2) _buzzer_play_success                                  2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _buzzer_play_error                                    4     4      0      30
                                              0 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 (2) _buttons_read                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _game_init                                            0     0      0     489
                       _buttons_init
                        _buzzer_init
                       _display_init
                         _game_reset
                          _leds_init
                       _sensors_init
 ---------------------------------------------------------------------------------
 (2) _sensors_init                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _leds_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _game_reset                                           0     0      0     489
                 _display_show_digit
                  _generate_sequence
 ---------------------------------------------------------------------------------
 (3) _generate_sequence                                    1     1      0     162
                                             18 COMRAM     1     1      0
                               _rand
 ---------------------------------------------------------------------------------
 (4) _rand                                                 6     4      2      94
                                             12 COMRAM     6     4      2
                             ___lmul
 ---------------------------------------------------------------------------------
 (5) ___lmul                                              12     4      8      94
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (3) _display_show_digit                                   2     2      0     327
                                              6 COMRAM     2     2      0
                            ___awmod
 ---------------------------------------------------------------------------------
 (4) ___awmod                                              6     2      4     298
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _display_init                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _buzzer_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _buttons_init                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _game_init
     _buttons_init
     _buzzer_init
     _display_init
     _game_reset
       _display_show_digit
         ___awmod
       _generate_sequence
         _rand
           ___lmul
     _leds_init
     _sensors_init
   _game_loop
     _buttons_read
     _buzzer_play_error
     _buzzer_play_success
     _display_show_digit
     _game_reset
     _ldr_dark_detected
       _adc_read
     _leds_flash

Address spaces:
Name               Size   Autos  Total    Usage
BIGRAM            1535      0       0      0.0%
BITBANK5           256      0       0      0.0%
BANK5              256      0       0      0.0%
BITBANK4           256      0       0      0.0%
BANK4              256      0       0      0.0%
BITBANK3           256      0       0      0.0%
BANK3              256      0       0      0.0%
BITBANK2           256      0       0      0.0%
BANK2              256      0       0      0.0%
BITBANK1           256      0       0      0.0%
BANK1              256      0       0      0.0%
BITBANK0           128      0       0      0.0%
BANK0              128      0       0      0.0%
BITCOMRAM          127      0       0      0.0%
COMRAM             127     26      40     31.5%
BITBIGSFRh         126      0       0      0.0%
BITBIGSFRl           1      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0      40      0.0%


Microchip Technology PIC18 Macro Assembler V3.00 build 20241204225717 
Symbol Table                                                                                   Sun Jun 08 16:13:45 2025

                          l9 0AB0                           l52 0AAA                           l62 0678  
                         l55 0ACA                           l80 0ADE                           l64 067E  
                         l49 0A10                           l83 09B0                           l59 0742  
                         l96 0AF0                           l99 093A                          l100 0978  
                        l101 094E                          l102 0962                          l112 0AE4  
                        l130 08D0                          l115 0A36                          l124 0AEA  
                        l132 0924                          l127 0A76                          l152 09C8  
                        l155 09E8                          l149 0AD4                          l158 0A58  
                        l175 08B6                          l408 07F0                          l176 08C6  
                        l921 0AD6                          l923 0AEC                          l843 085C  
                        l931 0AD0                          l925 0AE0                          l927 0AE6  
                        l951 0934                          l943 097C                          l929 0ACC  
                        l945 0998                          l963 0970                          l955 0948  
                        l971 08C8                          l947 09AE                          l949 0926  
                        l981 0904                          l967 0976                          l959 095C  
                        l983 0A5A                          l977 08D2                          l985 0A5C  
                        l979 08EA                          l987 0A74                ?_display_init 0001  
                        u300 0754                          u301 0750                          u310 076E  
                        u150 0934                          u311 076A                          u151 0930  
                        u320 0788                          u160 0948                          u144 098E  
                        u400 0620                          u321 0784                          u161 0944  
                        u145 098A                          u401 061C                          u330 07A6  
                        u170 095C                          u410 0678                          u331 07A2  
                        u171 0958                          u411 0674                          u340 07BC  
                        u180 0970                          u420 069A                          u341 07B8  
                        u181 096C                          u421 0696                          u350 07E0  
                        u270 087C                          u190 0924                          u430 06D0  
                        u351 07DC                          u271 0878                          u191 0920  
                        u431 06CC                          u280 08B6                          u360 0A10  
                        u440 06F0                          u281 08B2                          u361 0A0C  
                        u441 06EC                          u290 084E                          u370 09D6  
                        u450 070A                          u371 09D2                          u507 09A2  
                        u451 0706                          u380 0A56                          u517 09C0  
                        u381 0A50                          u390 0A58                          u295 0844  
                        u527 0A66                          u537 08DC                          u547 08F6  
                        u467 062E                          u477 0658                          u487 0716  
                        u497 0732                 ___awmod@sign 0006                          wreg 0FE8  
                       l1101 07BC                         l1111 07E8                         l1103 07C4  
                       l1105 07CA                         l1121 09EC                         l1201 070C  
                       l1107 07D0                         l1123 09FE                         l1115 09EA  
                       l1131 09BE                         l1203 0728                         l1109 07E0  
                       l1125 0A00                         l1141 0AC0                         l1133 09C6  
                       l1127 0A14                         l1071 0896                         l1063 085E  
                       l1143 0AC6                         l1151 0A9A                         l1135 09D6  
                       l1207 0AAC                         l1081 0746                         l1065 086E  
                       l1073 07F2                         l1153 0A9E                         l1129 09B4  
                       l1145 0A38                         l1091 0776                         l1083 0754  
                       l1067 087C                         l1075 082E                         l1139 0ABC  
                       l1155 0AA2                         l1171 0664                         l1163 0624  
                       l1093 0788                         l1085 075C                         l1069 088C  
                       l1157 0AA6                         l1149 0A92                         l1181 06A0  
                       l1173 0666                         l1165 063A                         l1095 0790  
                       l1087 0760                         l1079 0744                         l1183 06D0  
                       l1175 0684                         l1191 06DE                         l1167 0640  
                       l1159 060C                         l1097 0798                         l1089 076E  
                       l1193 06F0                         l1185 06D4                         l1177 068A  
                       l1169 064E                         l1099 07A6                         l1195 06F4  
                       l1179 069A                         l1197 06FA                         l1189 06DC  
                       l1199 070A                         _LATC 0F8B                         _LATD 0F8C  
         buzzer_play_error@i 0003                         _main 0AAC                         _rand 07F2  
                       _seed 0024                         fsr2h 0FDA                         indf2 0FDF  
                       fsr2l 0FD9                         start 7FFC                 ___param_bank 0000  
             ??_display_init 0001                        ?_main 0001                        ?_rand 000D  
            __end_of___awmod 07F2                        _TRISB 0F93                        _TRISC 0F94  
                      _TRISD 0F95          ___lmul@multiplicand 0005            _buzzer_play_error 08C8  
         ?_buzzer_play_error 0001                        tablat 0FF5                        status 0FD8  
        ??_buzzer_play_error 0001                 ?_buzzer_init 0001              __initialization 0A78  
               __end_of_main 0ABC                 __end_of_rand 085E      display_show_digit@digit 0008  
                     ??_main 001B                       ??_rand 000F                __activetblptr 0001  
  __end_of_buzzer_play_error 0926                       _ADCON0 0FC2                       _ADCON1 0FC1  
                     _ADRESH 0FC4                       _ADRESL 0FC3             __end_of_adc_read 09EA  
              ?_buttons_init 0001                ?_buttons_read 0001                       ___lmul 085E  
                  ??___awmod 0005                       clear_0 0A7E              ___awmod@divisor 0003  
 __end_of_display_show_digit 0A38                       isa$std 0001              ___awmod@counter 0005  
               __mediumconst 0600                       tblptrh 0FF7                       tblptrl 0FF6  
                     tblptru 0FF8                   __accesstop 0080      __end_of__initialization 0A84  
       __end_of_display_init 0AE6                ___rparam_used 0001               game_loop@i_106 0019  
             ??_buttons_init 0001               ??_buttons_read 0001               __pcstackCOMRAM 0001  
          _generate_sequence 09EA           ?_generate_sequence 0001                _current_level 0028  
                 __pnvCOMRAM 0028          ??_generate_sequence 0013                   _game_reset 0ABC  
                    ?___lmul 0001               ___lmul@product 0009                    ?_adc_read 0001  
  __end_of_generate_sequence 0A12            __end_of_game_init 0AAC                   _leds_flash 097A  
          __end_of_game_loop 0744            __end_of_digit_map 060B                      __Hparam 0000  
                    __Lparam 0000                      ___awmod 0744                 __psmallconst 0600  
                    __pcinit 0A78            __end_of_leds_init 0AE0          _buzzer_play_success 0A5A  
                    __ramtop 0600                   ??_adc_read 0003                      __ptext0 0AAC  
                    __ptext1 060C                      __ptext2 097A                      __ptext3 0A38  
                    __ptext4 09B2                      __ptext5 0A5A                      __ptext6 08C8  
                    __ptext7 0926                      __ptext8 0A92                      __ptext9 0ACC  
           ___awmod@dividend 0001         __end_of_buttons_init 0AF2         __end_of_buttons_read 097A  
       end_of_initialization 0A84         ?_buzzer_play_success 0001                   game_loop@i 0018  
              ?_sensors_init 0001                  ?_game_reset 0001                      postinc0 0FEE  
          _ldr_dark_detected 0A38                    _PORTBbits 0F81           ?_ldr_dark_detected 0001  
               _display_init 0AE0                    _TRISAbits 0F92                    _TRISEbits 0F96  
        ??_ldr_dark_detected 0006           _display_show_digit 0A12        ??_buzzer_play_success 0001  
             ??_sensors_init 0001                  ?_leds_flash 0001          ?_display_show_digit 0001  
  __end_of_ldr_dark_detected 0A5A               __end_of___lmul 08C8         ??_display_show_digit 0007  
        start_initialization 0A78                     ??___lmul 0009                  __pbssCOMRAM 001B  
            adc_read@channel 0005                ??_buzzer_init 0001                    _game_init 0A92  
                  _game_loop 060C                 _buttons_init 0AEC                 _buttons_read 0926  
                  _digit_map 0601                     ?___awmod 0001         __end_of_sensors_init 0AD6  
                __smallconst 0600                    _leds_init 0AD6                     _LATEbits 0F8D  
                 ?_game_init 0001                   ?_game_loop 0001                 ??_game_reset 0014  
                   _GO_nDONE 7E11          __end_of_buzzer_init 0AEC                   ?_leds_init 0001  
          ___lmul@multiplier 0001           __end_of_game_reset 0ACC                 ??_leds_flash 0001  
                   __Hrparam 0000                     __Lrparam 0000                 __Lsmallconst 0600  
               game_loop@btn 001A                     _adc_read 09B2           __end_of_leds_flash 09B2  
__end_of_buzzer_play_success 0A78           generate_sequence@i 0013                     __ptext10 0AD6  
                   __ptext11 0ABC                     __ptext12 09EA                     __ptext13 07F2  
                   __ptext14 085E                     __ptext15 0A12                     __ptext16 0744  
                   __ptext17 0AE0                     __ptext18 0AE6                     __ptext19 0AEC  
                _buzzer_init 0AE6                  ??_game_init 0014                  ??_game_loop 0014  
                   isa$xinst 0000                     _sequence 001B                  ??_leds_init 0001  
            leds_flash@index 0003                 _sensors_init 0ACC  
